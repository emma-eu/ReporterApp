{"version":3,"file":"static/js/1866.60d4c536.chunk.js","mappings":";gKASA,MAAMA,EAAIC,IAA2B,IAAxBC,SAAUC,KAAMC,GAAGH,EAC9B,MAAMI,EAAID,EAAEE,OAAQC,EAAAA,EAAAA,IAAE,IAAIH,EAAEE,SAAWE,EAAAA,EAAC,MACxC,OAAOC,EAAAA,EAAAA,GAAEL,EAAEM,IAAKC,EAAAA,EAAC,IAAIN,YAAWO,EAAAA,EAAAA,IAAER,EAAES,UAAUV,MAAME,KAAK,sECgC3D,MAAMD,EAAQU,OAAOC,IAAI,IAGnBC,EAAqBX,IACzB,GAAKA,GAAgCY,IAAMb,EAG3C,OAAQC,GAA+Ca,YAAC,EAiB7CC,EAAgBd,IAAA,CAC3Ba,aAAkBb,EAClBY,EAAGb,IA4BQK,EAAU,SACrBJ,GAAA,QAAAe,EAAAC,UAAAC,OACGL,EAAA,IAAAM,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAP,EAAAO,EAAA,GAAAH,UAAAG,GAAA,MACc,CACjBN,aAAkBD,EAAOQ,QACvB,CAACR,EAAKd,EAAGC,IAAQa,EA9BE,CAACZ,IACtB,QAAI,IAAAA,EAAoBa,aACtB,OAAOb,EAAoBa,aAE3B,MAAUQ,MACR,kEAAkErB,wGAGrE,EARoB,CA8BmBF,GAAoBE,EAAQD,EAAM,IACxEC,EAAQ,IAEVY,EAAGb,EAAA,EAGCG,EAAe,IAAIoB,IAKZnB,EACVH,GACD,SAACY,GAAkC,QAAAW,EAAAP,UAAAC,OAAAnB,EAAA,IAAAoB,MAAAK,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1B,EAAA0B,EAAA,GAAAR,UAAAQ,GACjC,MAAMzB,EAAID,EAAOmB,OACjB,IAAIH,EACAV,EACJ,MAAMD,EAA+B,GAC/BsB,EAAgC,GACtC,IAEIlB,EAFAmB,EAAI,EACJC,GAAA,EAGJ,KAAOD,EAAI3B,GAAG,CAKZ,IAJAQ,EAAIK,EAAQc,GAKVA,EAAI3B,QAAA,KACFK,EAAeN,EAAO4B,GACvBZ,EAAcH,EAAkBP,KAEjCG,GAAKO,EAAcF,IAAUc,GAC7BC,GAAA,EAGED,IAAM3B,GACR0B,EAAcG,KAAKxB,GAErBD,EAAcyB,KAAKrB,GACnBmB,GACD,CAOD,GAJIA,IAAM3B,GACRI,EAAcyB,KAAKhB,EAAQb,IAGzB4B,EAAY,CACd,MAAM3B,EAAMG,EAAc0B,KAAK,qBAC/BjB,EAAUV,EAAa4B,IAAI9B,MAMxBG,EAAsB4B,IAAM5B,EAC7BD,EAAa8B,IACXhC,EACCY,EAAUT,IAGfL,EAAS2B,CACV,CACD,OAAOzB,EAAQY,KAAYd,EAAO,EASzB2B,EAAOtB,EAAWH,EAAAA,IAQZG,EAAWS,EAAAA,IAQRT,EAAWL,EAAAA,qBC7LjC,SAASE,EAAEG,GACT,MAAa,UAANA,GAAuB,MAANA,CAC1B,0BACA,MAAML,EAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,4QCoDxD,MAAMa,EACe,qBADfA,EAEO,YAFPA,EAGkB,yBAHlBA,EAIS,eAJTA,EAKK,UALLA,EAMO,aANPA,EAOI,SAPJA,EAQa,kBARbA,EASK,UACRsB,EAAI,OAAQC,EAAI,gBAAiBC,EAAI,gBAAiBC,EAAIC,EAAAA,EAAC,44GAA64GC,EAAI,IA/C/8G,MACEC,WAAAA,GACEC,KAAKC,mBAAqC,IAAInB,IAAOkB,KAAKE,uBAAyB,EAAGF,KAAKG,aAAgB7C,IACzG,MAAQ2C,mBAAoBzC,GAAMwC,KAAMpC,EAAIN,EAAE8C,MAAMhC,GAAMZ,EAAE6C,IAAIjC,KAChE,OAAOZ,EAAE8B,IAAI1B,EAAE,EACdoC,KAAKM,eAAkBhD,IACxB,MAAME,EAAIF,EAAEiD,eAAgB3C,EAAIoC,KAAKG,aAAa3C,GAClDI,IAAMA,EAAE4C,kBAAoB5C,EAAE6C,MAAQ7C,EAAE6C,MAAO/B,MAAMgC,KAAKV,KAAKC,mBAAmBU,UAAUC,QACzFxC,GAAMA,IAAMR,GAAKQ,EAAEyC,WAAazC,EAAEqC,OAASjD,EAAEsD,SAAS1C,KACvD2C,SAAS3C,GAAMA,EAAEqC,MAAO,GAAG,EAC5BT,KAAKgB,eAAkB1D,IACxBA,EAAE2D,mBAA+B,WAAV3D,EAAEO,IAAmBmC,KAAKkB,oBAAqBC,EAAAA,EAAAA,GAAE7D,EAAEO,MAAQmC,KAAKM,eAAehD,GAAG,EACxG0C,KAAKoB,aAAgB9D,KACtB+D,EAAAA,EAAAA,GAAE/D,IAAMA,EAAE2D,kBAAoBjB,KAAKM,eAAehD,EAAE,CAExD,CAMAgE,eAAAA,CAAgBhE,EAAGE,GACjBwC,KAAKE,yBAA0BF,KAAKC,mBAAmBT,IAAIlC,EAAGE,GAAoC,IAAhCwC,KAAKE,wBAAgCF,KAAKuB,cAC9G,CACAC,iBAAAA,CAAkBlE,GAChB0C,KAAKC,mBAAmBwB,OAAOnE,IAAM0C,KAAKE,yBAA0D,IAAhCF,KAAKE,wBAAgCF,KAAK0B,iBAChH,CACAR,gBAAAA,GACExC,MAAMgC,KAAKV,KAAKC,mBAAmBU,UAAUI,SAASzD,GAAMA,EAAEmD,MAAO,GACvE,CACAc,YAAAA,GACEI,OAAOC,iBAAiB,QAAS5B,KAAKoB,cAAeO,OAAOC,iBAAiB,UAAW5B,KAAKgB,eAC/F,CACAU,eAAAA,GACEC,OAAOE,oBAAoB,QAAS7B,KAAKoB,cAAeO,OAAOE,oBAAoB,UAAW7B,KAAKgB,eACrG,GAaF,MAAMc,UAAUC,EAAAA,GACdhC,WAAAA,GACEiC,SAASxD,WAAYwB,KAAKiC,eAAgBC,EAAAA,EAAAA,KAAKlC,KAAKmC,WAAYC,EAAAA,EAAAA,GAAE,CAChEC,YAAa,OACbC,iBAAkB,CAChBC,mBAAmB,EACnBC,kBAAoBlF,IAAOA,EAAE2D,mBAAqBjB,KAAKS,MAAO,EAAInD,EAAEmF,mBAAmB,KAJ3BL,CAM7DpC,MAAOA,KAAK0C,KAAO,oBAAmBC,EAAAA,EAAAA,OAAO3C,KAAK4C,WAAY,EAAI5C,KAAK6C,kBAAmBC,EAAAA,EAAAA,GAAE,YAAY,IAAM9C,KAAKmC,UAAUY,4BAA4B/C,KAAKgD,eAAiB,UAAWhD,KAAKiD,eAAiB,WAAYjD,KAAKa,WAAY,EAAIb,KAAKkD,UAAW,EAAIlD,KAAKmD,cAAe,EAAInD,KAAKoD,mBAAoB,EAAIpD,KAAKqD,UAAWC,EAAAA,EAAAA,KAAKtD,KAAKuD,eAAiBzF,EAAAA,EAAGkC,KAAKwD,eAAiB,EAAGxD,KAAKS,MAAO,EAAIT,KAAKyD,mBAAqB,WAAYzD,KAAK0D,UAAYjE,EAAGO,KAAK2D,iBAAkB,EAAI3D,KAAK4D,MAAQ,IAAK5D,KAAKQ,iBAAkB,EAAIR,KAAK6D,2BAA4BlG,EAAAA,EAAAA,IAAE,CAAEmG,YAAY,IAAO9D,KAAK+D,0BAA2BpG,EAAAA,EAAAA,IAAE,CAAEmG,YAAY,IAAO9D,KAAKgE,qBAAsBrG,EAAAA,EAAAA,IAAE,CAAEmG,YAAY,IAAO9D,KAAKiE,oBAAqBtG,EAAAA,EAAAA,IAAE,CAAEmG,YAAY,GACnuB,CAAC,cAEC9D,KAAKkE,WAAa,CAAEjB,eAAgB,GAAIkB,YAAa,GAAItD,UAAW,EAAGqC,SAAU,EAAGC,aAAc,EAAGiB,eAAgB,EAAGhB,kBAAmB,EAAGd,iBAAkB,EAAG+B,QAAS,EAAGC,aAAc,GAAIC,MAAO,EAAGC,iBAAkB,EAAGjB,eAAgB,GAAIC,eAAgB,GAAI/C,KAAM,EAAGgD,mBAAoB,EAAGC,UAAW,EAAGC,gBAAiB,EAAGc,iBAAkB,EAAGb,MAAO,EAAGpD,gBAAiB,GAF3X,GAE8X,cAG7XR,KAAK0E,OAAS9E,EAH+W,GAY/X,gBAAM+E,GAAmB,IAARrH,EAACkB,UAAAC,OAAA,QAAAmG,IAAApG,UAAA,IAAAA,UAAA,GAChB,MAAQ2F,YAAa3G,EAAGkG,UAAW9F,EAAG6F,mBAAoBrF,EAAG+E,aAAczF,EAAGmH,uBAAwB9G,EAAGwF,eAAgBhG,EAAGiG,eAAgBsB,EAAGC,QAASC,EAAGC,WAAYC,GAAMlF,KAC7K,OAAOmF,EAAAA,EAAAA,GAAEnF,KAAM,CACbiF,WAAYC,EACZf,YAAa3G,EACbiG,mBAAoBrF,EACpBsF,UAAW9F,EACXuF,aAAczF,EACd0G,eAAgBrG,EAChBwF,eAAgBhG,EAChBiG,eAAgBsB,EAChBC,QAASC,EACTI,KAAM,WACL9H,EACL,CAEA,cAAM+H,SACEC,EAAAA,EAAAA,GAAEtF,MAAOA,KAAKuF,iBAAiBC,EAAAA,EAAAA,GAAExF,KAAKyF,GAC9C,CAEA,6BAAMC,GACJ1F,KAAKmC,UAAUY,yBACjB,CAGA4C,iBAAAA,GACE3D,MAAM2D,oBAAqB3F,KAAK6C,kBAAkB+C,QAAQ5F,KAAKyF,GAAI,CAAEI,WAAW,EAAIC,SAAS,IAAO9F,KAAK+F,wBAAyBC,uBAAsB,IAAMhG,KAAKiG,sBAAsBjG,KAAK4C,YAChM,CACA,UAAMsD,GACN,CACAC,UAAAA,CAAW7I,GACTA,EAAE+C,IAAI,mBAAqBL,KAAKoG,wBAAyB9I,EAAE+C,IAAI,UAAYL,KAAKqG,aAA4B,IAAdrG,KAAKS,OAAgBT,KAAKsG,eAAgBhJ,EAAE+C,IAAI,oBAAsBL,KAAKqG,YAAcrG,KAAKuD,iBAAmBzF,EAAAA,IAAMR,EAAE+C,IAAI,oBAAsBL,KAAKqG,YAAsC,IAAxBrG,KAAKwD,iBAAyBlG,EAAE+C,IAAI,wBAA0BL,KAAKqG,YAA0C,aAA5BrG,KAAKyD,qBAAsCnG,EAAE+C,IAAI,eAAiBL,KAAKqG,YAAcrG,KAAK0D,YAAcjE,KAAOO,KAAK2E,YAAW,GAAKrH,EAAE+C,IAAI,qBAAuBL,KAAKuG,yBAC7f,CACAC,MAAAA,GACExG,KAAKyE,mBAAqBzE,KAAKmE,aAAenE,KAAKiG,wBAAyBjG,KAAK4C,WAAY,CAC/F,CACA6D,oBAAAA,GACEzE,MAAMyE,uBAAwBzG,KAAK6C,kBAAkB6D,aAAc1G,KAAK2G,oBAAoBC,EAAAA,EAAAA,GAAE5G,KAChG,CAGAoG,qBAAAA,GACEpG,KAAK+F,wBAAyB/F,KAAK2E,YAAW,EAChD,CACA2B,WAAAA,IACEO,EAAAA,EAAAA,GAAE7G,MAAOA,KAAK2E,YAAW,GAAK3E,KAAK8G,iBACrC,CACAP,uBAAAA,GACEvG,KAAKiG,wBAAyBjG,KAAK2E,YAAW,EAChD,CACAoC,aAAAA,CAAczJ,GACZ0C,KAAKiF,WAAa3H,EAAGA,GAAK0I,uBAAsB,IAAMhG,KAAKiG,yBAC7D,CACAe,eAAAA,CAAgB1J,GACd0C,KAAKiH,aAAe3J,CACtB,CACAyI,qBAAAA,GACE,MAAQN,GAAInI,EAAG8G,eAAgB5G,GAAMwC,KACrCA,KAAK6E,uBAAyBrH,GAAI0B,EAAAA,EAAAA,GAAE1B,EAAGF,GAAK,IAC9C,CACA2I,qBAAAA,GAA8B,IAAR3I,IAACkB,UAAAC,OAAA,QAAAmG,IAAApG,UAAA,KAAAA,UAAA,GACrBwB,KAAK2G,mBAAoB3G,KAAKmE,YAAcnE,KAAKkH,uBAAuBC,EAAAA,EAAAA,GAAEnH,MAC1E,MAAQyF,GAAIjI,EAAGiH,iBAAkB7G,EAAGuG,YAAa/F,GAAM4B,KACvD1C,GAAKM,IAAMQ,GAAKgJ,QAAQC,KAAK,GAAG7J,EAAE8J,kCAAkC1J,oBAAqB,CACvF6H,GAAIjI,IACFwC,KAAKuH,eACX,CACAC,KAAAA,GACE,OAAOxH,KAAKyF,GAAGgC,IAAMzH,KAAK0C,IAC5B,CACAoE,eAAAA,GACE,MAAQ3C,YAAa7G,EAAGmD,KAAMjD,GAAMwC,KACpC1C,GAAK,iBAAkBA,GAAKA,EAAEoK,aAAa/H,GAAGgI,EAAAA,EAAAA,GAAEnK,GAClD,CACA+J,aAAAA,GACE,MAAQpD,YAAa7G,GAAM0C,KAC3B,IAAK1C,EACH,OACF,MAAME,EAAIwC,KAAKwH,QACf,iBAAkBlK,GAAKA,EAAEoK,aAAahI,EAAGlC,GAAIsC,EAAEwB,gBAAgBhE,EAAG0C,KAAKyF,IAAKzF,KAAK8G,iBACnF,CACAH,gBAAAA,GACE,MAAQxC,YAAa7G,GAAM0C,KAC3B1C,IAAM,oBAAqBA,IAAMA,EAAEsK,gBAAgBlI,GAAIpC,EAAEsK,gBAAgBjI,IAAKG,EAAE0B,kBAAkBlE,GACpG,CACA4J,mBAAAA,GACE,MAAQzC,iBAAkBnH,EAAGmI,GAAIjI,GAAMwC,KACvC,OAAoB,iBAAL1C,GAAgBuK,EAAAA,EAAAA,GAAErK,EAAG,CAAEiK,GAAInK,IAAOA,IAAM,IACzD,CACAwK,IAAAA,GACE9H,KAAKS,MAAO,CACd,CACAsH,YAAAA,GACE/H,KAAK+D,yBAAyBiE,MAChC,CACAC,MAAAA,GACEjI,KAAKiE,mBAAmB+D,OAAQhI,KAAKmC,UAAU+F,UACjD,CACAC,aAAAA,GACEnI,KAAK6D,0BAA0BmE,MACjC,CACAI,OAAAA,GACEpI,KAAKgE,oBAAoBgE,QAAQK,EAAAA,EAAAA,GAAErI,MAAOA,KAAKmC,UAAUmG,YAC3D,CACAC,YAAAA,CAAajL,GACX0C,KAAK+E,QAAUzH,EAAG0C,KAAK2E,YAAW,EACpC,CAGA6D,iBAAAA,GACE,MAAQnF,SAAU/F,EAAG4F,SAAU1F,GAAMwC,KACrC,OAAOxC,GAAIL,EAAAA,EAAAA,GAAEgB,EAAwBgB,EAAAA,EAAC,eAAcb,EAAAA,EAAAA,IAAEH,oDAAwEG,EAAAA,EAAAA,IAAEH,aAAyB6B,KAAK8H,eAAe9H,KAAK4D,eAAetG,EAAEmL,UAASxJ,EAAAA,EAAAA,GAAEe,KAAKiC,+CAA8CyG,EAAAA,EAAAA,GAAE1I,KAAK4D,iDAAmD,IAC7T,CACA+E,YAAAA,GACE,MAAQtE,QAAS/G,EAAGgH,aAAc9G,GAAMwC,KAAMpC,EAAIN,GAAIsL,EAAAA,EAAAA,GAAE,CAAE5K,MAAOG,EAAWV,MAAOD,EAAGH,SAAUC,IAAO,KACvG,OAAOM,GAAIT,EAAAA,EAAAA,GAAEgB,EAAUgB,EAAAA,EAAC,eAAcb,EAAAA,EAAAA,IAAEH,MAAaP,IAAIoC,KAAKwI,6BAA+B,IAC/F,CACAK,MAAAA,GACE,MAAQ1E,YAAa7G,EAAG+G,QAAS7G,EAAG+G,MAAO3G,EAAG6C,KAAMrC,EAAGuF,gBAAiBjG,EAAGuF,eAAgBlF,GAAMiC,KAAMzC,EAAID,GAAKc,EAAG0G,GAAKvH,EAAGyH,EAAItH,EAAI,MAAOP,EAAAA,EAAAA,GAAE,kBAAkB2L,EAAAA,EAAAA,GAAE,CAAE7F,eAAgBlF,EAAGgL,IAAK/I,KAAKuI,gBAC/L,OAAOvI,KAAKyF,GAAGuD,MAAQlE,EAAG9E,KAAKyF,GAAGwD,UAAYrL,EAAGoC,KAAKyF,GAAGyD,SAAW,UAAUC,EAAAA,EAAAA,IAAEnJ,KAAKyF,GAAI,KAAMzF,KAAKwH,SAAUxH,KAAKyF,GAAG2D,KAAO,SAAUjK,EAAAA,EAAC,eAAcb,EAAAA,EAAAA,IAAEH,OAAwBc,EAAAA,EAAAA,GAAEe,KAAK+G,8BAA6BzI,EAAAA,EAAAA,IAAE,CACpN,CAACH,IAAc,EACf,CAACkL,EAAAA,EAAEC,YAAY,EACf,CAACD,EAAAA,EAAEE,iBAAkBhM,QACjB0B,EAAAA,EAAAA,GAAEe,KAAKgH,oBAAoBhC,gBAAe1G,EAAAA,EAAAA,IAAE,CAChD,CAACH,KAAgBX,EACjB,CAACW,IAAoB,OACjB6B,KAAK2I,6BAA4BrK,EAAAA,EAAAA,IAAEH,yBAAiCX,EAAI,KAAOwC,KAAKwI,uCAC5F,GAEFgB,EAAAA,EAAAA,GAAE,kBAAmB1H,oDCxNf2H,EAAqB,CACzB,qBACA,sBACA,wBACA,uBACA,sBACA,oCACA,+BACA,+BACA,gEACA,6CACA,wBAEIC,EAAoCD,EAAmBpK,KAAK,KAE5DsK,EAA+B,qBAAZC,QAEnBC,EAAUF,EACZ,WAAa,EACbC,QAAQE,UAAUD,SAClBD,QAAQE,UAAUC,mBAClBH,QAAQE,UAAUE,sBAEhBC,GACHN,GAAaC,QAAQE,UAAUG,YAC5B,SAACC,GAAO,IAAAC,EAAA,OAAK,OAAAD,QAAO,IAAPA,GAAoB,QAAbC,EAAPD,EAASD,mBAAT,IAAoBE,OAAb,EAAPA,EAAAC,KAAAF,EAAwB,EACrC,SAACA,GAAO,OAAK,OAAAA,QAAA,IAAAA,OAAA,EAAAA,EAASG,aAAa,EAUnCC,EAAU,SAAVA,EAAoBC,EAAMC,GAAe,IAAAC,OAAT,IAAND,IAAAA,GAAS,GAIvC,IAAME,EAAe,OAAJH,QAAI,IAAJA,GAAkB,QAAdE,EAAJF,EAAMI,oBAAY,IAAAF,OAAd,EAAJA,EAAAL,KAAAG,EAAqB,SAUtC,MAT2B,KAAbG,GAAgC,SAAbA,GAORF,GAAUD,GAAQD,EAAQC,EAAKK,WAG1D,EAqBMC,EAAgB,SAAUpF,EAAIqF,EAAkBlK,GAGpD,GAAI0J,EAAQ7E,GACV,MAAO,GAGT,IAAIsF,EAAarM,MAAMoL,UAAUkB,MAAMC,MACrCxF,EAAGyF,iBAAiBxB,IAMtB,OAJIoB,GAAoBjB,EAAQO,KAAK3E,EAAIiE,IACvCqB,EAAWI,QAAQ1F,GAErBsF,EAAaA,EAAWnK,OAAOA,EAEjC,EAoCMwK,EAA2B,SAA3BA,EACJC,EACAP,EACAQ,GAIA,IAFA,IAAMP,EAAa,GACbQ,EAAkB7M,MAAMgC,KAAK2K,GAC5BE,EAAgB9M,QAAQ,CAC7B,IAAMyL,EAAUqB,EAAgBC,QAChC,IAAIlB,EAAQJ,GAAS,GAMrB,GAAwB,SAApBA,EAAQ5C,QAAoB,CAE9B,IAAMmE,EAAWvB,EAAQwB,mBAEnBC,EAAmBP,EADTK,EAAShN,OAASgN,EAAWvB,EAAQ7M,UACM,EAAMiO,GAC7DA,EAAQM,QACVb,EAAW3L,KAAI6L,MAAfF,EAAmBY,GAEnBZ,EAAW3L,KAAK,CACdyM,YAAa3B,EACba,WAAYY,GAGlB,KAAO,CAEkB9B,EAAQO,KAAKF,EAASR,IAG3C4B,EAAQ1K,OAAOsJ,KACdY,IAAqBO,EAASvK,SAASoJ,KAExCa,EAAW3L,KAAK8K,GAIlB,IAAM4B,EACJ5B,EAAQ4B,YAE0B,oBAA1BR,EAAQS,eACdT,EAAQS,cAAc7B,GAKpB8B,GACH1B,EAAQwB,GAAY,MACnBR,EAAQW,kBAAoBX,EAAQW,iBAAiB/B,IAEzD,GAAI4B,GAAcE,EAAiB,CAOjC,IAAME,EAAmBd,GACR,IAAfU,EAAsB5B,EAAQ7M,SAAWyO,EAAWzO,UACpD,EACAiO,GAGEA,EAAQM,QACVb,EAAW3L,KAAI6L,MAAfF,EAAmBmB,GAEnBnB,EAAW3L,KAAK,CACdyM,YAAa3B,EACba,WAAYmB,GAGlB,MAGEX,EAAgBJ,QAAOF,MAAvBM,EAA2BrB,EAAQ7M,SAEvC,CACF,CACA,OAAO0N,CACT,EAQMoB,EAAc,SAAU5B,GAC5B,OAAQ6B,MAAMC,SAAS9B,EAAKI,aAAa,YAAa,IACxD,EAQM2B,EAAc,SAAU/B,GAC5B,IAAKA,EACH,MAAM,IAAI1L,MAAM,oBAGlB,OAAI0L,EAAKgC,SAAW,IASf,0BAA0BC,KAAKjC,EAAKjD,UAnLjB,SAAUiD,GAAM,IAAAkC,EAIlCC,EAAe,OAAJnC,QAAI,IAAJA,GAAkB,QAAdkC,EAAJlC,EAAMI,oBAAY,IAAA8B,OAAd,EAAJA,EAAArC,KAAAG,EAAqB,mBACtC,MAAoB,KAAbmC,GAAgC,SAAbA,CAC5B,CA8KQC,CAAkBpC,MACnB4B,EAAY5B,GAEN,EAIJA,EAAKgC,QACd,EAoBMK,EAAuB,SAAUrP,EAAGmC,GACxC,OAAOnC,EAAEgP,WAAa7M,EAAE6M,SACpBhP,EAAEsP,cAAgBnN,EAAEmN,cACpBtP,EAAEgP,SAAW7M,EAAE6M,QACrB,EAEMO,EAAU,SAAUvC,GACxB,MAAwB,UAAjBA,EAAKjD,OACd,EA8DMyF,EAAqB,SAAUxC,GACnC,OALc,SAAUA,GACxB,OAAOuC,EAAQvC,IAAuB,UAAdA,EAAKnF,IAC/B,CAGS4H,CAAQzC,KAxCO,SAAUA,GAChC,IAAKA,EAAK0C,KACR,OAAO,EAET,IAOIC,EAPEC,EAAa5C,EAAK6C,MAAQnD,EAAYM,GACtC8C,EAAc,SAAUJ,GAC5B,OAAOE,EAAWjC,iBAChB,6BAA+B+B,EAAO,OAK1C,GACoB,qBAAXtL,QACe,qBAAfA,OAAO2L,KACe,oBAAtB3L,OAAO2L,IAAIC,OAElBL,EAAWG,EAAY1L,OAAO2L,IAAIC,OAAOhD,EAAK0C,YAE9C,IACEC,EAAWG,EAAY9C,EAAK0C,MAC5B,MAAOO,GAMP,OAJApG,QAAQqG,MACN,2IACAD,EAAIE,UAEC,CACT,CAGF,IAAMC,EAvCgB,SAAUC,EAAOR,GACvC,IAAK,IAAIxP,EAAI,EAAGA,EAAIgQ,EAAMnP,OAAQb,IAChC,GAAIgQ,EAAMhQ,GAAG+P,SAAWC,EAAMhQ,GAAGwP,OAASA,EACxC,OAAOQ,EAAMhQ,EAGnB,CAiCkBiQ,CAAgBX,EAAU3C,EAAK6C,MAC/C,OAAQO,GAAWA,IAAYpD,CACjC,CAO2BuD,CAAgBvD,EAC3C,EAoDMwD,EAAa,SAAUxD,GAC3B,IAAAyD,EAA0BzD,EAAK0D,wBAAvBC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OACf,OAAiB,IAAVD,GAA0B,IAAXC,CACxB,EACMC,EAAW,SAAU7D,EAAInN,GAAmC,IAA/BiR,EAAYjR,EAAZiR,aAActC,EAAa3O,EAAb2O,cAM/C,GAA0C,WAAtCuC,iBAAiB/D,GAAMgE,WACzB,OAAO,EAGT,IACMC,EADkB3E,EAAQO,KAAKG,EAAM,iCACAA,EAAKkE,cAAgBlE,EAChE,GAAIV,EAAQO,KAAKoE,EAAkB,yBACjC,OAAO,EAGT,GACGH,GACgB,SAAjBA,GACiB,gBAAjBA,GAqEK,GAAqB,kBAAjBA,EAMT,OAAON,EAAWxD,OA1ElB,CACA,GAA6B,oBAAlBwB,EAA8B,CAIvC,IADA,IAAM2C,EAAenE,EACdA,GAAM,CACX,IAAMkE,EAAgBlE,EAAKkE,cACrBE,EAAW1E,EAAYM,GAC7B,GACEkE,IACCA,EAAc3C,aACkB,IAAjCC,EAAc0C,GAId,OAAOV,EAAWxD,GAGlBA,EAFSA,EAAKqE,aAEPrE,EAAKqE,aACFH,GAAiBE,IAAapE,EAAKF,cAKtCoE,EAHAE,EAASE,IAKpB,CAEAtE,EAAOmE,CACT,CAWA,GAjHmB,SAAUnE,GAAM,IAAAuE,EA8BFC,EAAAC,EAAAC,EAN/BC,EAAW3E,GAAQN,EAAYM,GAC/B4E,EAAuB,QAAXL,EAAGI,SAAQ,IAAAJ,OAAA,EAARA,EAAUD,KAIzBO,GAAW,EACf,GAAIF,GAAYA,IAAa3E,EAM3B,IALA6E,KACc,QAAZL,EAAAI,SAAY,IAAAJ,GAAe,QAAfC,EAAZD,EAAc1E,qBAAa,IAAA2E,GAA3BA,EAA6BK,SAASF,IAClC,OAAJ5E,QAAI,IAAJA,GAAmB,QAAf0E,EAAJ1E,EAAMF,qBAAa,IAAA4E,GAAnBA,EAAqBI,SAAS9E,KAGxB6E,GAAYD,GAAc,KAAAG,EAAAC,EAAAC,EAMhCJ,IAAyB,QAAbG,EADZJ,EAAuB,QAAXG,EADZJ,EAAWjF,EAAYkF,UACA,IAAAG,OAAA,EAARA,EAAUT,YACA,IAAAU,GAAe,QAAfC,EAAZD,EAAclF,qBAAa,IAAAmF,IAA3BA,EAA6BH,SAASF,GACrD,CAGF,OAAOC,CACT,CAkEQK,CAAelF,GAKjB,OAAQA,EAAKmF,iBAAiBjR,OAmBhC,GAAqB,gBAAjB4P,EACF,OAAO,CAGX,CAWA,OAAO,CACT,EAmCMsB,EAAkC,SAAUrE,EAASf,GACzD,QACEA,EAAKqF,UAILtF,EAAQC,IAnQU,SAAUA,GAC9B,OAAOuC,EAAQvC,IAAuB,WAAdA,EAAKnF,IAC/B,CAkQIyK,CAActF,IACd6D,EAAS7D,EAAMe,IAjQU,SAAUf,GAMrC,MAJmB,YAAjBA,EAAKjD,SACL5I,MAAMoL,UAAUkB,MACbC,MAAMV,EAAKlN,UACXyS,MAAK,SAACC,GAAK,MAAuB,YAAlBA,EAAMzI,UAE7B,CA4PI0I,CAAqBzF,IAxCM,SAAUA,GACvC,GAAI,mCAAmCiC,KAAKjC,EAAKjD,SAG/C,IAFA,IAAIsD,EAAaL,EAAKkE,cAEf7D,GAAY,CACjB,GAA2B,aAAvBA,EAAWtD,SAA0BsD,EAAWgF,SAAU,CAE5D,IAAK,IAAIhS,EAAI,EAAGA,EAAIgN,EAAWvN,SAASoB,OAAQb,IAAK,CACnD,IAAMmS,EAAQnF,EAAWvN,SAAS4S,KAAKrS,GAEvC,GAAsB,WAAlBmS,EAAMzI,QAGR,QAAOuC,EAAQO,KAAKQ,EAAY,0BAE3BmF,EAAMV,SAAS9E,EAExB,CAEA,OAAO,CACT,CACAK,EAAaA,EAAW6D,aAC1B,CAKF,OAAO,CACT,CAaIyB,CAAuB3F,GAK3B,EAEM4F,EAAiC,SAAU7E,EAASf,GACxD,QACEwC,EAAmBxC,IACnB+B,EAAY/B,GAAQ,IACnBoF,EAAgCrE,EAASf,GAK9C,EAEM6F,EAA4B,SAAUC,GAC1C,IAAM9D,EAAWF,SAASgE,EAAe1F,aAAa,YAAa,IACnE,SAAIyB,MAAMG,IAAaA,GAAY,EAMrC,EAMM+D,EAAc,SAAdA,EAAwBvF,GAC5B,IAAMwF,EAAmB,GACnBC,EAAmB,GAqBzB,OApBAzF,EAAWhK,SAAQ,SAAUkP,EAAMrS,GACjC,IAAM6S,IAAYR,EAAKpE,YACjB3B,EAAUuG,EAAUR,EAAKpE,YAAcoE,EACvCS,EAlUmB,SAAUnG,EAAMkG,GAC3C,IAAMlE,EAAWD,EAAY/B,GAE7B,OAAIgC,EAAW,GAAKkE,IAAYtE,EAAY5B,GACnC,EAGFgC,CACT,CA0T8BoE,CAAqBzG,EAASuG,GAClDpF,EAAWoF,EAAUH,EAAYL,EAAKlF,YAAcb,EAChC,IAAtBwG,EACFD,EACIF,EAAiBnR,KAAI6L,MAArBsF,EAAyBlF,GACzBkF,EAAiBnR,KAAK8K,GAE1BsG,EAAiBpR,KAAK,CACpByN,cAAejP,EACf2O,SAAUmE,EACVT,KAAMA,EACNQ,QAASA,EACTG,QAASvF,GAGf,IAEOmF,EACJK,KAAKjE,GACLhO,QAAO,SAACkS,EAAKC,GAIZ,OAHAA,EAASN,QACLK,EAAI1R,KAAI6L,MAAR6F,EAAYC,EAASH,SACrBE,EAAI1R,KAAK2R,EAASH,SACfE,CACT,GAAG,IACFE,OAAOT,EACZ,EAoDMU,EAAa,SAAU1G,EAAMe,GAEjC,GADAA,EAAUA,GAAW,CAAC,GACjBf,EACH,MAAM,IAAI1L,MAAM,oBAElB,OAA8C,IAA1CgL,EAAQO,KAAKG,EAAMb,IAGhByG,EAA+B7E,EAASf,EACjD,EAEM2G,EAA6CzH,EAChDuH,OAAO,UACP3R,KAAK,KAEF8R,EAAc,SAAU5G,EAAMe,GAElC,GADAA,EAAUA,GAAW,CAAC,GACjBf,EACH,MAAM,IAAI1L,MAAM,oBAElB,OAAuD,IAAnDgL,EAAQO,KAAKG,EAAM2G,IAGhBvB,EAAgCrE,EAASf,EAClD,4tDCrqBA,IAAM6G,EACQ,SAACC,EAAWC,GACtB,GAAID,EAAU5S,OAAS,EAAG,CACxB,IAAM8S,EAAaF,EAAUA,EAAU5S,OAAS,GAC5C8S,IAAeD,GACjBC,EAAWC,iBAAgB,EAE/B,CAEA,IAAMC,EAAYJ,EAAUK,QAAQJ,IACjB,IAAfG,GAIFJ,EAAUM,OAAOF,EAAW,GAH5BJ,EAAUjS,KAAKkS,IAXfF,EAmBU,SAACC,EAAWC,GACxB,IAAMG,EAAYJ,EAAUK,QAAQJ,IACjB,IAAfG,GACFJ,EAAUM,OAAOF,EAAW,GAI5BJ,EAAU5S,OAAS,IAClB4S,EAAUA,EAAU5S,OAAS,GAAGmT,qBAEjCP,EAAUA,EAAU5S,OAAS,GAAG+S,iBAAgB,EAEpD,EAeIK,EAAa,SAAUvU,GAC3B,MAAkB,SAAX,OAAAA,QAACsH,IAADtH,OAACsH,EAADtH,EAAGO,MAAgC,KAAd,OAADP,QAACsH,IAADtH,OAACsH,EAADtH,EAAGwU,QAChC,EAGMC,EAAe,SAAUzU,GAC7B,OAAOuU,EAAWvU,KAAOA,EAAE0U,QAC7B,EAGMC,EAAgB,SAAU3U,GAC9B,OAAOuU,EAAWvU,IAAMA,EAAE0U,QAC5B,EAEME,EAAQ,SAAUC,GACtB,OAAOC,WAAWD,EAAI,EACxB,EASME,EAAiB,SAAUC,GAAkB,QAAA/T,EAAAC,UAAAC,OAAR8T,EAAM,IAAA7T,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAN4T,EAAM5T,EAAA,GAAAH,UAAAG,GAC/C,MAAwB,oBAAV2T,EAAuBA,EAAKrH,WAAIrG,EAAA2N,GAAUD,CAC1D,EAEME,EAAkB,SAAUC,GAQhC,OAAOA,EAAMC,OAAO5G,YAA4C,oBAAvB2G,EAAMlS,aAC3CkS,EAAMlS,eAAe,GACrBkS,EAAMC,MACZ,EAIMC,EAAoB,GAEpBC,EAAkB,SAAUvH,EAAUwH,GAG1C,IAwDIvB,EAxDEwB,GAAiB,OAAXD,QAAWjO,IAAXiO,OAAWjO,EAAXiO,EAAaE,WAAYA,SAE/B1B,GAAuB,OAAXwB,QAAWjO,IAAXiO,OAAWjO,EAAXiO,EAAaxB,YAAasB,EAEtCK,EAAMC,EAAA,CACVC,yBAAyB,EACzB1Q,mBAAmB,EACnB2Q,mBAAmB,EACnBpB,aAAAA,EACAE,cAAAA,GACGY,GAGCO,EAAQ,CAGZC,WAAY,GAkBZC,gBAAiB,GAMjBC,eAAgB,GAEhBC,4BAA6B,KAC7BC,wBAAyB,KACzBC,QAAQ,EACRC,QAAQ,EACRC,gBAAgB,EAIhBC,4BAAwBjP,EAGxBkP,oBAAgBlP,GAaZmP,EAAY,SAACC,EAAuBC,EAAYC,GACpD,OAAOF,QACiCpP,IAAtCoP,EAAsBC,GACpBD,EAAsBC,GACtBjB,EAAOkB,GAAoBD,IAa3BE,EAAqB,SAAUjK,EAASuI,GAC5C,IAAMlS,EAC2B,oBAAxB,OAAAkS,QAAK7N,IAAL6N,OAAK7N,EAAL6N,EAAOlS,cACVkS,EAAMlS,oBACNqE,EAIN,OAAOwO,EAAME,gBAAgBc,WAC3B,SAAAhX,GAAA,IAAGiX,EAASjX,EAATiX,UAAWC,EAAalX,EAAbkX,cAAa,OACzBD,EAAUhF,SAASnF,KAKnB,OAAA3J,QAAAqE,IAAArE,OAAAqE,EAAArE,EAAcO,SAASuT,KACvBC,EAAclU,MAAK,SAACmK,GAAI,OAAKA,IAASL,IAAQ,KAsB9CqK,EAAmB,SACvBN,GAEA,IAAAO,EAAAhW,UAAAC,OAAA,QAAAmG,IAAApG,UAAA,GAAAA,UAAA,GADuC,CAAC,EAACiW,EAAAD,EAAvCE,YAAAA,OAAc9P,IAAH6P,GAAQA,EAAAE,EAAAH,EAAEjC,OAAAA,OAAS3N,IAAH+P,EAAG,GAAEA,EAE9BC,EAAc5B,EAAOiB,GAUzB,GAR2B,oBAAhBW,IACTA,EAAcA,EAAW3J,WAAArG,EAAAiQ,EAAItC,MAGX,IAAhBqC,IACFA,OAAchQ,IAGXgQ,EAAa,CAChB,QAAoBhQ,IAAhBgQ,IAA6C,IAAhBA,EAC/B,OAAOA,EAIT,MAAM,IAAI/V,MAAM,IAADmS,OACRiD,EAAU,gEAEnB,CAEA,IAAI1J,EAAOqK,EAEX,GAA2B,kBAAhBA,EAA0B,CACnC,IACErK,EAAOuI,EAAIgC,cAAcF,GACzB,MAAOpH,GACP,MAAM,IAAI3O,MAAM,IAADmS,OACRiD,EAAU,gDAAAjD,OAAgDxD,EAAIE,QAAO,KAE9E,CAEA,IAAKnD,IACEmK,EACH,MAAM,IAAI7V,MAAM,IAADmS,OACRiD,EAAU,yCAMvB,CAEA,OAAO1J,GAGHwK,EAAsB,WAC1B,IAAIxK,EAAOgK,EAAiB,eAAgB,CAAEG,aAAa,IAG3D,IAAa,IAATnK,EACF,OAAO,EAGT,QACW3F,IAAT2F,GACCA,IAAS4G,EAAY5G,EAAMyI,EAAOgC,iBAGnC,GAAIb,EAAmBrB,EAAImC,gBAAkB,EAC3C1K,EAAOuI,EAAImC,kBACN,CACL,IAAMC,EAAqB9B,EAAMG,eAAe,GAKhDhJ,EAHE2K,GAAsBA,EAAmBC,mBAGfZ,EAAiB,gBAC/C,MACkB,OAAThK,IAGTA,EAAOgK,EAAiB,kBAG1B,IAAKhK,EACH,MAAM,IAAI1L,MACR,gEAIJ,OAAO0L,GAGH6K,EAAsB,WA4F1B,GA3FAhC,EAAME,gBAAkBF,EAAMC,WAAWgC,KAAI,SAAChB,GAC5C,IAAMC,EDySK,SAAUD,EAAW/I,GAGpC,IAAIP,EAmBJ,OAjBEA,GAJFO,EAAUA,GAAW,CAAC,GAGVS,cACGX,EACX,CAACiJ,GACD/I,EAAQR,iBACR,CACElK,OAAQuP,EAA+BmF,KAAK,KAAMhK,GAClDM,SAAS,EACTG,cAAeT,EAAQS,cACvBE,iBAAkBmE,IAITvF,EACXwJ,EACA/I,EAAQR,iBACRqF,EAA+BmF,KAAK,KAAMhK,IAGvCgF,EAAYvF,EACrB,CChU4BwK,CAASlB,EAAWrB,EAAOgC,iBAK3CQ,ED6TM,SAAUnB,EAAW/I,GAsBrC,OArBAA,EAAUA,GAAW,CAAC,GAGVS,cACGX,EACX,CAACiJ,GACD/I,EAAQR,iBACR,CACElK,OAAQ+O,EAAgC2F,KAAK,KAAMhK,GACnDM,SAAS,EACTG,cAAeT,EAAQS,gBAIdlB,EACXwJ,EACA/I,EAAQR,iBACR6E,EAAgC2F,KAAK,KAAMhK,GAKjD,CCpV6BmK,CAAUpB,EAAWrB,EAAOgC,iBAE7CG,EACJb,EAAc7V,OAAS,EAAI6V,EAAc,QAAK1P,EAC1C8Q,EACJpB,EAAc7V,OAAS,EACnB6V,EAAcA,EAAc7V,OAAS,QACrCmG,EAEA+Q,EAAuBH,EAAepV,MAAK,SAACmK,GAAI,OACpD0G,EAAW1G,EAAK,IAEZqL,EAAsBJ,EACzBxK,QACA6K,UACAzV,MAAK,SAACmK,GAAI,OAAK0G,EAAW1G,MAEvBuL,IAAuBxB,EAAclU,MACzC,SAACmK,GAAI,OAAK+B,EAAY/B,GAAQ,CAAC,IAGjC,MAAO,CACL8J,UAAAA,EACAC,cAAAA,EACAkB,eAAAA,EAGAM,mBAAAA,EAGAX,kBAAAA,EAEAO,iBAAAA,EAUAC,qBAAAA,EAEAC,oBAAAA,EAUAG,iBAAA,SAAiBxL,GAAsB,IAAhByL,IAAOxX,UAAAC,OAAA,QAAAmG,IAAApG,UAAA,KAAAA,UAAA,GACtByX,EAAU3B,EAAc5C,QAAQnH,GACtC,OAAI0L,EAAU,EAORD,EACKR,EACJxK,MAAMwK,EAAe9D,QAAQnH,GAAQ,GACrCnK,MAAK,SAACqF,GAAE,OAAKwL,EAAWxL,MAGtB+P,EACJxK,MAAM,EAAGwK,EAAe9D,QAAQnH,IAChCsL,UACAzV,MAAK,SAACqF,GAAE,OAAKwL,EAAWxL,MAGtB6O,EAAc2B,GAAWD,EAAU,GAAK,GACjD,EAEJ,IAEA5C,EAAMG,eAAiBH,EAAME,gBAAgB1S,QAC3C,SAACsV,GAAK,OAAKA,EAAM5B,cAAc7V,OAAS,CAAC,IAKzC2U,EAAMG,eAAe9U,QAAU,IAC9B8V,EAAiB,iBAElB,MAAM,IAAI1V,MACR,uGAWJ,GACEuU,EAAME,gBAAgBlT,MAAK,SAACiJ,GAAC,OAAKA,EAAEyM,uBACpC1C,EAAME,gBAAgB7U,OAAS,EAE/B,MAAM,IAAII,MACR,kLAaAsX,EAAmB,SAAU1Q,GACjC,IAAMwP,EAAgBxP,EAAGwP,cAEzB,GAAKA,EAIL,OACEA,EAAcnJ,YAC6B,OAA3CmJ,EAAcnJ,WAAWmJ,cAElBkB,EAAiBlB,EAAcnJ,YAGjCmJ,GAGHmB,EAAW,SAAU7L,IACZ,IAATA,GAIAA,IAAS4L,EAAiBpD,YAIzBxI,GAASA,EAAK8L,OAKnB9L,EAAK8L,MAAM,CAAEC,gBAAiBtD,EAAOsD,gBAErClD,EAAMK,wBAA0BlJ,EA7aV,SAAUA,GAClC,OACEA,EAAKjD,SAC0B,UAA/BiD,EAAKjD,QAAQiP,eACU,oBAAhBhM,EAAKiM,MAEhB,CAyaQC,CAAkBlM,IACpBA,EAAKiM,UATLJ,EAASrB,OAaP2B,EAAqB,SAAUC,GACnC,IAAMpM,EAAOgK,EAAiB,iBAAkB,CAC9ChC,OAAQ,CAACoE,KAEX,OAAOpM,IAAuB,IAATA,GAAyBoM,GAc1CC,EAAkB,SAAHC,GAAoD,IAArCnE,EAAMmE,EAANnE,OAAQD,EAAKoE,EAALpE,MAAKqE,EAAAD,EAAEE,WAAAA,OAAanS,IAAHkS,GAAQA,EACnEpE,EAASA,GAAUF,EAAgBC,GACnC2C,IAEA,IAAI4B,EAAkB,KAEtB,GAAI5D,EAAMG,eAAe9U,OAAS,EAAG,CAInC,IAAMwY,EAAiB9C,EAAmBzB,EAAQD,GAC5CyE,EACJD,GAAkB,EAAI7D,EAAME,gBAAgB2D,QAAkBrS,EAEhE,GAAIqS,EAAiB,EAKjBD,EAFED,EAGA3D,EAAMG,eAAeH,EAAMG,eAAe9U,OAAS,GAChDiX,iBAGatC,EAAMG,eAAe,GAAG4B,uBAEvC,GAAI4B,EAAY,CAIrB,IAAII,EAAoB/D,EAAMG,eAAea,WAC3C,SAAAgD,GAAA,IAAGjC,EAAiBiC,EAAjBjC,kBAAiB,OAAOzC,IAAWyC,CAAiB,IAmBzD,GAfEgC,EAAoB,IACnBD,EAAe7C,YAAc3B,GAC3BvB,EAAYuB,EAAQM,EAAOgC,mBACzB/D,EAAWyB,EAAQM,EAAOgC,mBAC1BkC,EAAenB,iBAAiBrD,GAAQ,MAQ7CyE,EAAoBF,GAGlBE,GAAqB,EAAG,CAI1B,IAAME,EACkB,IAAtBF,EACI/D,EAAMG,eAAe9U,OAAS,EAC9B0Y,EAAoB,EAEpBG,EAAmBlE,EAAMG,eAAe8D,GAE9CL,EACE1K,EAAYoG,IAAW,EACnB4E,EAAiB5B,iBACjB4B,EAAiB1B,mBACzB,MAAY/D,EAAWY,KAGrBuE,EAAkBE,EAAenB,iBAAiBrD,GAAQ,GAE9D,KAAO,CAIL,IAAI6E,EAAmBnE,EAAMG,eAAea,WAC1C,SAAAoD,GAAA,IAAG9B,EAAgB8B,EAAhB9B,iBAAgB,OAAOhD,IAAWgD,CAAgB,IAmBvD,GAfE6B,EAAmB,IAClBL,EAAe7C,YAAc3B,GAC3BvB,EAAYuB,EAAQM,EAAOgC,mBACzB/D,EAAWyB,EAAQM,EAAOgC,mBAC1BkC,EAAenB,iBAAiBrD,MAQrC6E,EAAmBN,GAGjBM,GAAoB,EAAG,CAIzB,IAAME,EACJF,IAAqBnE,EAAMG,eAAe9U,OAAS,EAC/C,EACA8Y,EAAmB,EAEnBG,EAAmBtE,EAAMG,eAAekE,GAE9CT,EACE1K,EAAYoG,IAAW,EACnBgF,EAAiBvC,kBACjBuC,EAAiB/B,oBACzB,MAAY9D,EAAWY,KAGrBuE,EAAkBE,EAAenB,iBAAiBrD,GAEtD,CACF,MAGEsE,EAAkBzC,EAAiB,iBAGrC,OAAOyC,GAKHW,EAAmB,SAAUra,GACjC,IAAMoV,EAASF,EAAgBlV,GAE3B6W,EAAmBzB,EAAQpV,IAAM,IAKjC+U,EAAeW,EAAO4E,wBAAyBta,GAEjDgU,EAAKhJ,WAAW,CAOduP,YAAa7E,EAAOE,0BAQpBb,EAAeW,EAAOzQ,kBAAmBjF,IAM7CA,EAAEmF,mBAOEqV,EAAe,SAAUrF,GAC7B,IAAMC,EAASF,EAAgBC,GACzBsF,EAAkB5D,EAAmBzB,EAAQD,IAAU,EAG7D,GAAIsF,GAAmBrF,aAAkBsF,SACnCD,IACF3E,EAAMK,wBAA0Bf,OAE7B,CAOL,IAAIuF,EALJxF,EAAMyF,2BAMN,IAAIC,GAAsB,EAC1B,GAAI/E,EAAMK,wBACR,GAAInH,EAAY8G,EAAMK,yBAA2B,EAAG,CAElD,IAAM2E,EAAkBjE,EACtBf,EAAMK,yBAMAa,EAAkBlB,EAAME,gBAAgB8E,GAAxC9D,cACR,GAAIA,EAAc7V,OAAS,EAAG,CAE5B,IAAM4Z,EAAY/D,EAAcF,WAC9B,SAAC7J,GAAI,OAAKA,IAAS6I,EAAMK,uBAAuB,IAE9C4E,GAAa,IACXrF,EAAOjB,aAAaqB,EAAMU,gBACxBuE,EAAY,EAAI/D,EAAc7V,SAChCwZ,EAAW3D,EAAc+D,EAAY,GACrCF,GAAsB,GAKpBE,EAAY,GAAK,IACnBJ,EAAW3D,EAAc+D,EAAY,GACrCF,GAAsB,GAO9B,CAKF,MAMK/E,EAAME,gBAAgBxD,MAAK,SAACzG,GAAC,OAC5BA,EAAEiL,cAAcxE,MAAK,SAACnS,GAAC,OAAK2O,EAAY3O,GAAK,IAAE,MAMjDwa,GAAsB,QAQ1BA,GAAsB,EAGpBA,IACFF,EAAWrB,EAAgB,CAGzBlE,OAAQU,EAAMK,wBACdsD,WAAY/D,EAAOf,cAAcmB,EAAMU,mBAKzCsC,EADE6B,IAGO7E,EAAMK,yBAA2BsB,KAE9C,CAEA3B,EAAMU,oBAAiBlP,GAwBnB0T,EAAc,SAAU7F,IACxBO,EAAOjB,aAAaU,IAAUO,EAAOf,cAAcQ,KAlBrC,SAAUA,GAA2B,IAApBsE,EAAUvY,UAAAC,OAAA,QAAAmG,IAAApG,UAAA,IAAAA,UAAA,GAC7C4U,EAAMU,eAAiBrB,EAEvB,IAAMuE,EAAkBJ,EAAgB,CAAEnE,MAAAA,EAAOsE,WAAAA,IAC7CC,IACEnF,EAAWY,IAKbA,EAAMhQ,iBAER2T,EAASY,IAOTuB,CAAY9F,EAAOO,EAAOf,cAAcQ,KAKtC+F,EAAiB,SAAU/F,IAluBb,SAAUnV,GAC9B,MAAkB,YAAX,OAAAA,QAAAsH,IAAAtH,OAAAsH,EAAAtH,EAAGO,MAA+B,SAAX,OAAAP,QAAAsH,IAAAtH,OAAAsH,EAAAtH,EAAGO,MAAgC,MAAf,OAAAP,QAAAsH,IAAAtH,OAAAsH,EAAAtH,EAAGwU,QACvD,EAkuBM2G,CAAchG,KACsC,IAApDJ,EAAeW,EAAOxQ,kBAAmBiQ,KAEzCA,EAAMhQ,iBACN6O,EAAKhJ,eAIHoQ,EAAa,SAAUpb,GAC3B,IAAMoV,EAASF,EAAgBlV,GAE3B6W,EAAmBzB,EAAQpV,IAAM,GAIjC+U,EAAeW,EAAO4E,wBAAyBta,IAI/C+U,EAAeW,EAAOzQ,kBAAmBjF,KAI7CA,EAAEmF,iBACFnF,EAAE4a,6BAOE3W,EAAe,WACnB,GAAK6R,EAAMM,OAkCX,OA7BAtC,EAA8BC,EAAWC,GAIzC8B,EAAMS,uBAAyBb,EAAOG,kBAClCjB,GAAM,WACJkE,EAASrB,IACX,IACAqB,EAASrB,KAEbjC,EAAIlR,iBAAiB,UAAWkW,GAAc,GAC9ChF,EAAIlR,iBAAiB,YAAa+V,EAAkB,CAClDgB,SAAS,EACTC,SAAS,IAEX9F,EAAIlR,iBAAiB,aAAc+V,EAAkB,CACnDgB,SAAS,EACTC,SAAS,IAEX9F,EAAIlR,iBAAiB,QAAS8W,EAAY,CACxCC,SAAS,EACTC,SAAS,IAEX9F,EAAIlR,iBAAiB,UAAW0W,EAAa,CAC3CK,SAAS,EACTC,SAAS,IAEX9F,EAAIlR,iBAAiB,UAAW4W,GAEzBlH,GAGH5P,EAAkB,WACtB,GAAK0R,EAAMM,OAWX,OAPAZ,EAAIjR,oBAAoB,UAAWiW,GAAc,GACjDhF,EAAIjR,oBAAoB,YAAa8V,GAAkB,GACvD7E,EAAIjR,oBAAoB,aAAc8V,GAAkB,GACxD7E,EAAIjR,oBAAoB,QAAS6W,GAAY,GAC7C5F,EAAIjR,oBAAoB,UAAWyW,GAAa,GAChDxF,EAAIjR,oBAAoB,UAAW2W,GAE5BlH,GAwBHzO,EACc,qBAAXlB,QAA0B,qBAAsBA,OACnD,IAAIkX,kBAnBc,SAAUC,GACHA,EAAUhJ,MAAK,SAAUiJ,GAEpD,OADqBra,MAAMgC,KAAKqY,EAASC,cACrBlJ,MAAK,SAAUvF,GACjC,OAAOA,IAAS6I,EAAMK,uBACxB,GACF,KAKE2C,EAASrB,aASPnQ,EAEAqU,EAAsB,WACrBpW,IAILA,EAAiB6D,aACb0M,EAAMM,SAAWN,EAAMO,QACzBP,EAAMC,WAAWgC,KAAI,SAAUhB,GAC7BxR,EAAiB+C,QAAQyO,EAAW,CAClCvO,SAAS,EACTD,WAAW,GAEf,MAkMJ,OA1LAyL,EAAO,CACL,UAAIoC,GACF,OAAON,EAAMM,QAGf,UAAIC,GACF,OAAOP,EAAMO,QAGfzL,SAAA,SAASgR,GACP,GAAI9F,EAAMM,OACR,OAAO1T,KAGT,IAAMmZ,EAAapF,EAAUmF,EAAiB,cACxCE,EAAiBrF,EAAUmF,EAAiB,kBAC5CG,EAAoBtF,EAAUmF,EAAiB,qBAEhDG,GACHjE,IAGFhC,EAAMM,QAAS,EACfN,EAAMO,QAAS,EACfP,EAAMI,4BAA8BV,EAAImC,cAExC,OAAAkE,QAAAvU,IAAAuU,GAAAA,IAEA,IAAMG,EAAmB,WACnBD,GACFjE,IAEF7T,IACA0X,IACA,OAAAG,QAAAxU,IAAAwU,GAAAA,KAGF,OAAIC,GACFA,EAAkBjG,EAAMC,WAAWrC,UAAUuI,KAC3CD,EACAA,GAEKtZ,OAGTsZ,IACOtZ,OAGTsI,WAAA,SAAWkR,GACT,IAAKpG,EAAMM,OACT,OAAO1T,KAGT,IAAMsL,EAAO2H,EAAA,CACXwG,aAAczG,EAAOyG,aACrBC,iBAAkB1G,EAAO0G,iBACzBC,oBAAqB3G,EAAO2G,qBACzBH,GAGLI,aAAaxG,EAAMS,wBACnBT,EAAMS,4BAAyBjP,EAE/BlD,IACA0R,EAAMM,QAAS,EACfN,EAAMO,QAAS,EACfsF,IAEA7H,EAAgCC,EAAWC,GAE3C,IAAMmI,EAAe1F,EAAUzI,EAAS,gBAClCoO,EAAmB3F,EAAUzI,EAAS,oBACtCqO,EAAsB5F,EAAUzI,EAAS,uBACzCuM,EAAc9D,EAClBzI,EACA,cACA,2BAGF,OAAAmO,QAAA7U,IAAA6U,GAAAA,IAEA,IAAMI,EAAqB,WACzB3H,GAAM,WACA2F,GACFzB,EAASM,EAAmBtD,EAAMI,8BAEpC,OAAAkG,QAAA9U,IAAA8U,GAAAA,GACF,KAGF,OAAI7B,GAAe8B,GACjBA,EACEjD,EAAmBtD,EAAMI,8BACzB+F,KAAKM,EAAoBA,GACpB7Z,OAGT6Z,IACO7Z,OAGT8Z,MAAA,SAAMC,GACJ,OAAK3G,EAAMM,QAIXN,EAAMQ,gBAAiB,EAEhB5T,KAAKwR,iBAAgB,EAAMuI,IALzB/Z,MAQXga,QAAA,SAAQC,GACN,OAAK7G,EAAMM,QAIXN,EAAMQ,gBAAiB,EAEnBvC,EAAUA,EAAU5S,OAAS,KAAOuB,KAC/BA,KAGFA,KAAKwR,iBAAgB,EAAOyI,IAT1Bja,MAYX+C,wBAAA,SAAwBmX,GACtB,IAAMC,EAAkB,GAAGnJ,OAAOkJ,GAAmBtZ,OAAOwZ,SAY5D,OAVAhH,EAAMC,WAAa8G,EAAgB9E,KAAI,SAACnL,GAAO,MAC1B,kBAAZA,EAAuB4I,EAAIgC,cAAc5K,GAAWA,CAAO,IAGhEkJ,EAAMM,QACR0B,IAGF6D,IAEOjZ,IACT,GAGFqa,OAAOC,iBAAiBhJ,EAAM,CAC5BM,kBAAmB,CACjBU,MAAK,WACH,OAAOc,EAAMQ,cACf,GAEFpC,gBAAiB,CACfc,MAAK,SAACqB,EAAQrI,GACZ,GAAI8H,EAAMO,SAAWA,EACnB,OAAO3T,KAIT,GADAoT,EAAMO,OAASA,EACXA,EAAQ,CACV,IAAM4G,EAAUxG,EAAUzI,EAAS,WAC7BkP,EAAczG,EAAUzI,EAAS,eACvC,OAAAiP,QAAA3V,IAAA2V,GAAAA,IAEA7Y,IACAuX,IAEA,OAAAuB,QAAA5V,IAAA4V,GAAAA,GACF,KAAO,CACL,IAAMC,EAAY1G,EAAUzI,EAAS,aAC/BoP,EAAgB3G,EAAUzI,EAAS,iBAEzC,OAAAmP,QAAA7V,IAAA6V,GAAAA,IAEArF,IACA7T,IACA0X,IAEA,OAAAyB,QAAA9V,IAAA8V,GAAAA,GACF,CAEA,OAAO1a,IACT,KAKJsR,EAAKvO,wBAAwBsI,GAEtBiG,CACT,wBCzkCA,SAASnS,EAAE5B,EAAGQ,GACZ,MAAO,CACL6Z,yBAAyB,EACzB+C,cAAe5c,GAAG4c,eAAiBpd,EACnCqd,eAAiBxc,KAAOa,EAAAA,EAAAA,GAAEb,IAAI,MAC3BL,EAEHgV,SAAUxV,EAAE8M,cACZ2K,gBAAiBxX,EAAAA,EACjB6T,UAAWlT,EAAAA,EAEf,CCfA,SAASA,EAAEC,EAAChB,EAA2BQ,GAAG,IAA1B0E,iBAAkBhF,GAAGF,EACnC,OAAQE,GAAGud,iBAAoBjd,EAAQ,CAACQ,KAAMT,EAAEL,GAAGud,oBAAqBld,EAAEC,IAAvCQ,CACrC,CACA,SAAST,IAAU,IAARS,EAACI,UAAAC,OAAA,QAAAmG,IAAApG,UAAA,GAAAA,UAAA,GAAG,GACb,OAAOE,MAAMoc,QAAQ1c,GAAKA,EAAI,CAACA,EACjC,CACA,MAAMwI,EAAKxI,IAAMV,EAAAA,EAAAA,KAAE,CAACJ,EAAGM,KACrB,IAAIL,EAAG0B,EAAGlB,EACV,MAAM+G,EAAI1G,EAAEkE,iBACZ1E,EAAEmd,aAAY,KACZzd,EAAEc,EAAEiE,cAAgB9E,GAAKe,EAAE4J,UAAU,IACnCtK,EAAEod,UAAUxd,IACdF,EAAE+I,YAAc7I,EAAE6C,IAAI,uBAAyB/C,EAAE8F,kBAAoB9E,EAAEgK,aAAehK,EAAE4J,WAAW,IACjGtK,EAAEqd,gBAAe,IAAM3c,EAAEgK,eAC7B,MAAMhK,EAAI,CACR4J,SAAUA,KACR,MAAM1K,EAAIyB,GAAK3B,EAAEmI,GACjB,GAAIjI,EAAE0d,YAAa,CACjB,IAAK3d,EAAG,CACN,MAAM4B,EAAI,IACL2F,KACAxH,EAAEgF,kBAEPvE,IAAMI,EAAEX,EAAGF,GAAIC,EAAIyH,EAAEjH,EAAG0B,EAAEjC,EAAG2B,GAC/B,EACuC,mBAA/B7B,EAAE6d,2BAA2C7d,EAAE6d,6BAA+B7d,EAAE8F,oBAAsB7F,EAAE2K,UAClH,GAEFI,WAAYA,IAAM/K,GAAG+K,aACrB8S,oBAAsB5d,IACpB,GAAID,EACF,MAAM,IAAIsB,MAAM,8BAClBI,EAAIzB,CAAC,EAEP6d,mBAAqB7d,IACnB,MAAM2B,EAAIF,GAAK3B,EAAEmI,GACjB1H,EAAII,EAAEgB,EAAG7B,EAAGE,EAAE,EAEhBuF,wBAAyBA,IAAMxF,GAAGwF,wBAAwBhF,IAE5D,OAAOO,CAAC,qFCvCV,MAAMnB,EACG,4BADHA,EAES,oCACZW,EAAI,CACLoQ,MAAO,GACPC,OAAQ,EACRmN,YAAa,GACZ1S,EAAIxL,IAA2C,IAAxC6F,eAAgBlF,EAAGF,IAAKH,EAAGqL,IAAKjE,GAAG1H,EAC3C,MAAQ8Q,MAAO1Q,EAAG2Q,OAAQ/P,EAAGkd,YAAand,GAAML,EAAGF,EAAIJ,EAAI,EAAGF,EAAU,aAANS,EAAkBO,EAAI,SAASd,MAAMA,EAAII,KAAKQ,MAAMR,KAAKQ,KAAKR,KAAKQ,MACrI,OAAOiL,EAAAA,EAAAA,GAAE3L,EAAGyB,EAAAA,EAAC,gCAA+BxB,EAAAA,EAAAA,IAAER,aAAmBK,aAAa,OAAOA,KAAKA,GAAKF,EAAI,EAAIa,cAAcX,GAAKF,EAAIa,EAAI,OAAM2B,EAAAA,EAAAA,GAAEgF,MAAMvH,EAAAA,EAAC,GAAGA,EAAAA,EAAC,gBAAeI,EAAAA,EAAAA,IAAER,QAAoBmB,GAAKY,EAAAA,6BAA4Bf,EAAI,QAAU,aAAaG,GAAKY,EAAAA,4BAA2B","sources":["../node_modules/@esri/calcite-components/dist/chunks/Heading.js","../node_modules/lit-html/src/static.ts","../node_modules/@esri/calcite-components/dist/chunks/key.js","../node_modules/@esri/calcite-components/dist/components/calcite-popover/customElement.js","../node_modules/tabbable/src/index.js","../node_modules/focus-trap/index.js","../node_modules/@esri/calcite-components/dist/chunks/focusTrapComponent.js","../node_modules/@esri/calcite-components/dist/chunks/useFocusTrap.js","../node_modules/@esri/calcite-components/dist/chunks/FloatingArrow.js"],"sourcesContent":["import { keyed as i } from \"lit-html/directives/keyed.js\";\nimport { unsafeStatic as l, literal as n, html as m } from \"lit-html/static.js\";\nimport { safeClassMap as c } from \"@arcgis/lumina\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction f(e) {\n  return Math.min(Math.max(Math.ceil(e), 1), 6);\n}\nconst h = ({ children: e, ...a }) => {\n  const t = a.level ? l(`h${a.level}`) : n`div`;\n  return i(a.key, m`<${t} class=${c(a.class)}>${e}</${t}>`);\n};\nexport {\n  h as H,\n  f as c\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {\n  html as coreHtml,\n  svg as coreSvg,\n  mathml as coreMathml,\n  TemplateResult,\n} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * an attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg | typeof coreMathml) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const mathml = withStatic(coreMathml);\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction t(n) {\n  return n === \"Enter\" || n === \" \";\n}\nconst e = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport {\n  t as i,\n  e as n\n};\n","import { c as k } from \"../../chunks/runtime.js\";\nimport { keyed as h } from \"lit-html/directives/keyed.js\";\nimport { html as f } from \"lit\";\nimport { createRef as x, ref as u } from \"lit-html/directives/ref.js\";\nimport { LitElement as C, createEvent as n, safeClassMap as s, setAttribute as A } from \"@arcgis/lumina\";\nimport { d as m, r as D, a as F, f as $, c as L, h as H, F as g } from \"../../chunks/floating-ui.js\";\nimport { u as O, h as T, t as B, q as R } from \"../../chunks/dom.js\";\nimport { g as z } from \"../../chunks/guid.js\";\nimport { o as U } from \"../../chunks/openCloseComponent.js\";\nimport { H as S } from \"../../chunks/Heading.js\";\nimport { c as I } from \"../../chunks/loadable.js\";\nimport { c as q } from \"../../chunks/observers.js\";\nimport { F as _ } from \"../../chunks/FloatingArrow.js\";\nimport { g as N } from \"../../chunks/component.js\";\nimport { u as M } from \"../../chunks/useT9n.js\";\nimport { u as K } from \"../../chunks/useFocusTrap.js\";\nimport { i as j } from \"../../chunks/key.js\";\nimport { css as V } from \"@lit/reactive-element/css-tag.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nclass X {\n  constructor() {\n    this.registeredElements = /* @__PURE__ */ new Map(), this.registeredElementCount = 0, this.queryPopover = (e) => {\n      const { registeredElements: t } = this, i = e.find((r) => t.has(r));\n      return t.get(i);\n    }, this.togglePopovers = (e) => {\n      const t = e.composedPath(), i = this.queryPopover(t);\n      i && !i.triggerDisabled && (i.open = !i.open), Array.from(this.registeredElements.values()).filter(\n        (r) => r !== i && r.autoClose && r.open && !t.includes(r)\n      ).forEach((r) => r.open = !1);\n    }, this.keyDownHandler = (e) => {\n      e.defaultPrevented || (e.key === \"Escape\" ? this.closeAllPopovers() : j(e.key) && this.togglePopovers(e));\n    }, this.clickHandler = (e) => {\n      O(e) || e.defaultPrevented || this.togglePopovers(e);\n    };\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  registerElement(e, t) {\n    this.registeredElementCount++, this.registeredElements.set(e, t), this.registeredElementCount === 1 && this.addListeners();\n  }\n  unregisterElement(e) {\n    this.registeredElements.delete(e) && this.registeredElementCount--, this.registeredElementCount === 0 && this.removeListeners();\n  }\n  closeAllPopovers() {\n    Array.from(this.registeredElements.values()).forEach((e) => e.open = !1);\n  }\n  addListeners() {\n    window.addEventListener(\"click\", this.clickHandler), window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n  removeListeners() {\n    window.removeEventListener(\"click\", this.clickHandler), window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\nconst o = {\n  positionContainer: \"position-container\",\n  container: \"container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContainer: \"headerContainer\",\n  heading: \"heading\"\n}, v = \"auto\", b = \"aria-controls\", E = \"aria-expanded\", G = V`:host{display:contents;--calcite-floating-ui-z-index: var(--calcite-popover-z-index, var(--calcite-z-index-popup))}.position-container{inline-size:max-content;display:none;inset-block-start:0;left:0;z-index:var(--calcite-floating-ui-z-index)}.position-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset,left,opacity;opacity:0;box-shadow:0 0 16px #00000029;z-index:var(--calcite-z-index);border-radius:.25rem}.position-container[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}.position-container[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}.position-container[data-placement^=left] .calcite-floating-ui-anim{left:5px}.position-container[data-placement^=right] .calcite-floating-ui-anim{left:-5px}.position-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block-start:0;left:0}.calcite-floating-ui-arrow{pointer-events:none;position:absolute;z-index:calc(var(--calcite-z-index) * -1);fill:var(--calcite-color-foreground-1)}.calcite-floating-ui-arrow__stroke{stroke:var(--calcite-color-border-3)}:host([scale=s]) .heading{padding:.5rem .75rem;font-size:var(--calcite-font-size--1);line-height:1.375}:host([scale=m]) .heading{padding:.75rem 1rem;font-size:var(--calcite-font-size-0);line-height:1.375}:host([scale=l]) .heading{padding:1rem 1.25rem;font-size:var(--calcite-font-size-1);line-height:1.375}.position-container .calcite-floating-ui-anim{border-width:1px;border-style:solid;background-color:var(--calcite-popover-background-color, var(--calcite-color-foreground-1));border-color:var(--calcite-popover-border-color, var(--calcite-color-border-3));border-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round))}.calcite-floating-ui-arrow{fill:var(--calcite-popover-background-color, var(--calcite-color-foreground-1))}.calcite-floating-ui-arrow__stroke{stroke:var(--calcite-popover-border-color, var(--calcite-color-border-3))}.header{display:flex;flex:1 1 auto;align-items:stretch;justify-content:flex-start;border-width:0px;border-bottom-width:1px;border-style:solid;border-block-end-color:var(--calcite-popover-border-color, var(--calcite-color-border-3))}.heading{margin:0;display:block;flex:1 1 auto;align-self:center;white-space:normal;font-weight:var(--calcite-font-weight-medium);word-wrap:break-word;word-break:break-word;color:var(--calcite-popover-text-color, var(--calcite-color-text-1))}.headerContainer{position:relative;display:flex;height:100%;flex-direction:row;flex-wrap:nowrap;border-radius:.25rem;color:var(--calcite-popover-text-color, var(--calcite-color-text-1))}.headerContainer.has-header{flex-direction:column}.content{display:flex;height:100%;width:100%;flex-direction:column;flex-wrap:nowrap;align-self:center;word-wrap:break-word;word-break:break-word}.close-button-container{display:flex;overflow:hidden;flex:0 0 auto;border-start-end-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));border-end-end-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));--calcite-action-corner-radius-start-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));--calcite-action-corner-radius-end-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp))}::slotted(calcite-panel),::slotted(calcite-flow){height:100%}:host([hidden]){display:none}[hidden]{display:none}`, w = new X();\nclass J extends C {\n  constructor() {\n    super(...arguments), this.closeButtonEl = x(), this.focusTrap = K({\n      triggerProp: \"open\",\n      focusTrapOptions: {\n        allowOutsideClick: !0,\n        escapeDeactivates: (e) => (e.defaultPrevented || (this.open = !1, e.preventDefault()), !1)\n      }\n    })(this), this.guid = `calcite-popover-${z()}`, this.hasLoaded = !1, this.mutationObserver = q(\"mutation\", () => this.focusTrap.updateContainerElements()), this.transitionProp = \"opacity\", this.floatingLayout = \"vertical\", this.autoClose = !1, this.closable = !1, this.flipDisabled = !1, this.focusTrapDisabled = !1, this.messages = M(), this.offsetDistance = m, this.offsetSkidding = 0, this.open = !1, this.overlayPositioning = \"absolute\", this.placement = v, this.pointerDisabled = !1, this.scale = \"m\", this.triggerDisabled = !1, this.calcitePopoverBeforeClose = n({ cancelable: !1 }), this.calcitePopoverBeforeOpen = n({ cancelable: !1 }), this.calcitePopoverClose = n({ cancelable: !1 }), this.calcitePopoverOpen = n({ cancelable: !1 });\n  }\n  static {\n    this.properties = { floatingLayout: 16, referenceEl: 16, autoClose: 7, closable: 7, flipDisabled: 7, flipPlacements: 0, focusTrapDisabled: 7, focusTrapOptions: 0, heading: 1, headingLevel: 11, label: 1, messageOverrides: 0, offsetDistance: 11, offsetSkidding: 11, open: 7, overlayPositioning: 3, placement: 3, pointerDisabled: 7, referenceElement: 1, scale: 3, triggerDisabled: 7 };\n  }\n  static {\n    this.styles = G;\n  }\n  // #endregion\n  // #region Public Methods\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  async reposition(e = !1) {\n    const { referenceEl: t, placement: i, overlayPositioning: r, flipDisabled: l, filteredFlipPlacements: c, offsetDistance: a, offsetSkidding: d, arrowEl: p, floatingEl: P } = this;\n    return D(this, {\n      floatingEl: P,\n      referenceEl: t,\n      overlayPositioning: r,\n      placement: i,\n      flipDisabled: l,\n      flipPlacements: c,\n      offsetDistance: a,\n      offsetSkidding: d,\n      arrowEl: p,\n      type: \"popover\"\n    }, e);\n  }\n  /** Sets focus on the component's first focusable element. */\n  async setFocus() {\n    await I(this), this.requestUpdate(), T(this.el);\n  }\n  /** Updates the element(s) that are used within the focus-trap of the component. */\n  async updateFocusTrapElements() {\n    this.focusTrap.updateContainerElements();\n  }\n  // #endregion\n  // #region Lifecycle\n  connectedCallback() {\n    super.connectedCallback(), this.mutationObserver?.observe(this.el, { childList: !0, subtree: !0 }), this.setFilteredPlacements(), requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n  async load() {\n  }\n  willUpdate(e) {\n    e.has(\"flipPlacements\") && this.flipPlacementsHandler(), e.has(\"open\") && (this.hasUpdated || this.open !== !1) && this.openHandler(), (e.has(\"offsetDistance\") && (this.hasUpdated || this.offsetDistance !== m) || e.has(\"offsetSkidding\") && (this.hasUpdated || this.offsetSkidding !== 0) || e.has(\"overlayPositioning\") && (this.hasUpdated || this.overlayPositioning !== \"absolute\") || e.has(\"placement\") && (this.hasUpdated || this.placement !== v)) && this.reposition(!0), e.has(\"referenceElement\") && this.referenceElementHandler();\n  }\n  loaded() {\n    this.referenceElement && !this.referenceEl && this.setUpReferenceElement(), this.hasLoaded = !0;\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback(), this.mutationObserver?.disconnect(), this.removeReferences(), F(this);\n  }\n  // #endregion\n  // #region Private Methods\n  flipPlacementsHandler() {\n    this.setFilteredPlacements(), this.reposition(!0);\n  }\n  openHandler() {\n    U(this), this.reposition(!0), this.setExpandedAttr();\n  }\n  referenceElementHandler() {\n    this.setUpReferenceElement(), this.reposition(!0);\n  }\n  setFloatingEl(e) {\n    this.floatingEl = e, e && requestAnimationFrame(() => this.setUpReferenceElement());\n  }\n  setTransitionEl(e) {\n    this.transitionEl = e;\n  }\n  setFilteredPlacements() {\n    const { el: e, flipPlacements: t } = this;\n    this.filteredFlipPlacements = t ? $(t, e) : null;\n  }\n  setUpReferenceElement(e = !0) {\n    this.removeReferences(), this.referenceEl = this.getReferenceElement(), L(this);\n    const { el: t, referenceElement: i, referenceEl: r } = this;\n    e && i && !r && console.warn(`${t.tagName}: reference-element id \"${i}\" was not found.`, {\n      el: t\n    }), this.addReferences();\n  }\n  getId() {\n    return this.el.id || this.guid;\n  }\n  setExpandedAttr() {\n    const { referenceEl: e, open: t } = this;\n    e && \"setAttribute\" in e && e.setAttribute(E, B(t));\n  }\n  addReferences() {\n    const { referenceEl: e } = this;\n    if (!e)\n      return;\n    const t = this.getId();\n    \"setAttribute\" in e && e.setAttribute(b, t), w.registerElement(e, this.el), this.setExpandedAttr();\n  }\n  removeReferences() {\n    const { referenceEl: e } = this;\n    e && (\"removeAttribute\" in e && (e.removeAttribute(b), e.removeAttribute(E)), w.unregisterElement(e));\n  }\n  getReferenceElement() {\n    const { referenceElement: e, el: t } = this;\n    return (typeof e == \"string\" ? R(t, { id: e }) : e) || null;\n  }\n  hide() {\n    this.open = !1;\n  }\n  onBeforeOpen() {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n  onOpen() {\n    this.calcitePopoverOpen.emit(), this.focusTrap.activate();\n  }\n  onBeforeClose() {\n    this.calcitePopoverBeforeClose.emit();\n  }\n  onClose() {\n    this.calcitePopoverClose.emit(), H(this), this.focusTrap.deactivate();\n  }\n  storeArrowEl(e) {\n    this.arrowEl = e, this.reposition(!0);\n  }\n  // #endregion\n  // #region Rendering\n  renderCloseButton() {\n    const { messages: e, closable: t } = this;\n    return t ? h(o.closeButtonContainer, f`<div class=${s(o.closeButtonContainer)}><calcite-action appearance=transparent class=${s(o.closeButton)} @click=${this.hide} .scale=${this.scale} .text=${e.close} ${u(this.closeButtonEl)}><calcite-icon icon=x .scale=${N(this.scale)}></calcite-icon></calcite-action></div>`) : null;\n  }\n  renderHeader() {\n    const { heading: e, headingLevel: t } = this, i = e ? S({ class: o.heading, level: t, children: e }) : null;\n    return i ? h(o.header, f`<div class=${s(o.header)}>${i}${this.renderCloseButton()}</div>`) : null;\n  }\n  render() {\n    const { referenceEl: e, heading: t, label: i, open: r, pointerDisabled: l, floatingLayout: c } = this, a = e && r, d = !a, p = l ? null : h(\"floating-arrow\", _({ floatingLayout: c, ref: this.storeArrowEl }));\n    return this.el.inert = d, this.el.ariaLabel = i, this.el.ariaLive = \"polite\", A(this.el, \"id\", this.getId()), this.el.role = \"dialog\", f`<div class=${s(o.positionContainer)} ${u(this.setFloatingEl)}><div class=${s({\n      [o.container]: !0,\n      [g.animation]: !0,\n      [g.animationActive]: a\n    })} ${u(this.setTransitionEl)}>${p}<div class=${s({\n      [o.hasHeader]: !!t,\n      [o.headerContainer]: !0\n    })}>${this.renderHeader()}<div class=${s(o.content)}><slot></slot></div>${t ? null : this.renderCloseButton()}</div></div></div>`;\n  }\n}\nk(\"calcite-popover\", J);\nexport {\n  J as Popover\n};\n","// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n","import {\n  tabbable,\n  focusable,\n  isFocusable,\n  isTabbable,\n  getTabIndex,\n} from 'tabbable';\n\nconst activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n\n    if (\n      trapStack.length > 0 &&\n      !trapStack[trapStack.length - 1]._isManuallyPaused()\n    ) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  },\n};\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e?.key === 'Escape' || e?.key === 'Esc' || e?.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e?.key === 'Tab' || e?.keyCode === 9;\n};\n\n// checks for TAB by default\nconst isKeyForward = function (e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nconst isKeyBackward = function (e) {\n  return isTabEvent(e) && e.shiftKey;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nconst internalTrapStack = [];\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const trapStack = userOptions?.trapStack || internalTrapStack;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward,\n    isKeyBackward,\n    ...userOptions,\n  };\n\n  const state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [], // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  const findContainerIndex = function (element, event) {\n    const composedPath =\n      typeof event?.composedPath === 'function'\n        ? event.composedPath()\n        : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) =>\n        container.contains(element) ||\n        // fall back to explicit tabbable search which will take into consideration any\n        //  web components if the `tabbableOptions.getShadowRoot` option was used for\n        //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n        //  look inside web components even if open)\n        composedPath?.includes(container) ||\n        tabbableNodes.find((node) => node === element)\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  const getNodeForOption = function (\n    optionName,\n    { hasFallback = false, params = [] } = {}\n  ) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\n          `\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`\n        );\n      }\n\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\n            `\\`${optionName}\\` as selector refers to no known node`\n          );\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus', { hasFallback: true });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (\n      node === undefined ||\n      (node && !isFocusable(node, config.tabbableOptions))\n    ) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.containerGroups = state.containers.map((container) => {\n      const tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      const focusableNodes = focusable(container, config.tabbableOptions);\n\n      const firstTabbableNode =\n        tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      const lastTabbableNode =\n        tabbableNodes.length > 0\n          ? tabbableNodes[tabbableNodes.length - 1]\n          : undefined;\n\n      const firstDomTabbableNode = focusableNodes.find((node) =>\n        isTabbable(node)\n      );\n      const lastDomTabbableNode = focusableNodes\n        .slice()\n        .reverse()\n        .find((node) => isTabbable(node));\n\n      const posTabIndexesFound = !!tabbableNodes.find(\n        (node) => getTabIndex(node) > 0\n      );\n\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound,\n\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode,\n\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode(node, forward = true) {\n          const nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes\n                .slice(focusableNodes.indexOf(node) + 1)\n                .find((el) => isTabbable(el));\n            }\n\n            return focusableNodes\n              .slice(0, focusableNodes.indexOf(node))\n              .reverse()\n              .find((el) => isTabbable(el));\n          }\n\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        },\n      };\n    });\n\n    state.tabbableGroups = state.containerGroups.filter(\n      (group) => group.tabbableNodes.length > 0\n    );\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (\n      state.containerGroups.find((g) => g.posTabIndexesFound) &&\n      state.containerGroups.length > 1\n    ) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  const getActiveElement = function (el) {\n    const activeElement = el.activeElement;\n\n    if (!activeElement) {\n      return;\n    }\n\n    if (\n      activeElement.shadowRoot &&\n      activeElement.shadowRoot.activeElement !== null\n    ) {\n      return getActiveElement(activeElement.shadowRoot);\n    }\n\n    return activeElement;\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === getActiveElement(document)) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement],\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  const findNextNavNode = function ({ target, event, isBackward = false }) {\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findContainerIndex(target, event);\n      const containerGroup =\n        containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.lastTabbableNode\n              : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.firstTabbableNode\n              : destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate,\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  const checkFocusIn = function (event) {\n    const target = getActualTarget(event);\n    const targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      let nextNode; // next node to focus, if we find one\n      let navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          const mruContainerIdx = findContainerIndex(\n            state.mostRecentlyFocusedNode\n          );\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          const { tabbableNodes } = state.containerGroups[mruContainerIdx];\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            const mruTabIdx = tabbableNodes.findIndex(\n              (node) => node === state.mostRecentlyFocusedNode\n            );\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (\n            !state.containerGroups.some((g) =>\n              g.tabbableNodes.some((n) => getTabIndex(n) > 0)\n            )\n          ) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent),\n        });\n      }\n\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkKeyNav = function (event, isBackward = false) {\n    state.recentNavEvent = event;\n\n    const destinationNode = findNextNavNode({ event, isBackward });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkTabKey = function (event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  const checkEscapeKey = function (event) {\n    if (\n      isEscapeEvent(event) &&\n      valueOrHandler(config.escapeDeactivates, event) !== false\n    ) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n\n  const checkClick = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  const checkDomRemoval = function (mutations) {\n    const isFocusedNodeRemoved = mutations.some(function (mutation) {\n      const removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  const mutationObserver =\n    typeof window !== 'undefined' && 'MutationObserver' in window\n      ? new MutationObserver(checkDomRemoval)\n      : undefined;\n\n  const updateObservedNodes = function () {\n    if (!mutationObserver) {\n      return;\n    }\n\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true,\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      onActivate?.();\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate?.();\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      const options = {\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus,\n        ...deactivateOptions,\n      };\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n\n      const onDeactivate = getOption(options, 'onDeactivate');\n      const onPostDeactivate = getOption(options, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      const returnFocus = getOption(\n        options,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      onDeactivate?.();\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate?.();\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = true;\n\n      return this._setPausedState(true, pauseOptions);\n    },\n\n    unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = false;\n\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n\n      return this._setPausedState(false, unpauseOptions);\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      updateObservedNodes();\n\n      return this;\n    },\n  };\n\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value() {\n        return state.manuallyPaused;\n      },\n    },\n    _setPausedState: {\n      value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n\n        state.paused = paused;\n        if (paused) {\n          const onPause = getOption(options, 'onPause');\n          const onPostPause = getOption(options, 'onPostPause');\n          onPause?.();\n\n          removeListeners();\n          updateObservedNodes();\n\n          onPostPause?.();\n        } else {\n          const onUnpause = getOption(options, 'onUnpause');\n          const onPostUnpause = getOption(options, 'onPostUnpause');\n\n          onUnpause?.();\n\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n\n          onPostUnpause?.();\n        }\n\n        return this;\n      },\n    },\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n","import { createFocusTrap as e } from \"focus-trap\";\nimport { p as t, b as u } from \"./dom.js\";\nimport { f as o } from \"./runtime.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction n(a, c) {\n  const { el: s } = a, r = c?.focusTrapEl || s;\n  r && (a.focusTrap = e(r, f(s, c?.focusTrapOptions)));\n}\nfunction f(a, c) {\n  return {\n    clickOutsideDeactivates: !0,\n    fallbackFocus: c?.fallbackFocus || a,\n    setReturnFocus: (r) => (u(r), !1),\n    ...c,\n    // the following options are not overridable\n    document: a.ownerDocument,\n    tabbableOptions: t,\n    trapStack: o\n  };\n}\nfunction d(a, c) {\n  (a.focusTrapDisabledOverride ? !a.focusTrapDisabledOverride() : !a.focusTrapDisabled) && a.focusTrap?.activate(c);\n}\nfunction l(a, c) {\n  a.focusTrap?.deactivate(c);\n}\nexport {\n  d as a,\n  n as b,\n  f as c,\n  l as d\n};\n","import { makeGenericController as l } from \"@arcgis/components-controllers\";\nimport { createFocusTrap as p } from \"focus-trap\";\nimport { c as v } from \"./focusTrapComponent.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction o(r, { focusTrapOptions: e }, i) {\n  return !e?.extraContainers && !i ? r : [r, ...n(e?.extraContainers), ...n(i)];\n}\nfunction n(r = []) {\n  return Array.isArray(r) ? r : [r];\n}\nconst F = (r) => l((e, i) => {\n  let a, u, c;\n  const d = r.focusTrapOptions;\n  i.onConnected(() => {\n    e[r.triggerProp] && a && s.activate();\n  }), i.onUpdate((t) => {\n    e.hasUpdated && t.has(\"focusTrapDisabled\") && (e.focusTrapDisabled ? s.deactivate() : s.activate());\n  }), i.onDisconnected(() => s.deactivate());\n  const s = {\n    activate: () => {\n      const t = u || e.el;\n      if (t.isConnected) {\n        if (!a) {\n          const f = {\n            ...d,\n            ...e.focusTrapOptions\n          };\n          c ||= o(t, e), a = p(c, v(t, f));\n        }\n        (typeof e.focusTrapDisabledOverride == \"function\" ? !e.focusTrapDisabledOverride() : !e.focusTrapDisabled) && a.activate();\n      }\n    },\n    deactivate: () => a?.deactivate(),\n    overrideFocusTrapEl: (t) => {\n      if (a)\n        throw new Error(\"Focus trap already created\");\n      u = t;\n    },\n    setExtraContainers: (t) => {\n      const f = u || e.el;\n      c = o(f, e, t);\n    },\n    updateContainerElements: () => a?.updateContainerElements(c)\n  };\n  return s;\n});\nexport {\n  F as u\n};\n","import { ref as w } from \"lit-html/directives/ref.js\";\nimport { keyed as g } from \"lit-html/directives/keyed.js\";\nimport { html as f, svg as a, nothing as $ } from \"lit-html\";\nimport { safeClassMap as n } from \"@arcgis/lumina\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nconst h = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\"\n}, m = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1\n}, S = ({ floatingLayout: c, key: l, ref: d }) => {\n  const { width: t, height: r, strokeWidth: o } = m, i = t / 2, e = c === \"vertical\", s = `M0,0 H${t} L${t - i},${r} Q${i},${r} ${i},${r} Z`;\n  return g(l, f`<svg aria-hidden=true class=${n(h.arrow)} height=${t} viewBox=${`0 0 ${t} ${t + (e ? 0 : o)}`} width=${t + (e ? o : 0)} ${w(d)}>${a`${a`<path class=${n(h.arrowStroke)} d=${s ?? $} fill=none stroke-width=${o + 1} />` || \"\"}<path d=${s ?? $} stroke=none />`}</svg>`);\n};\nexport {\n  S as F\n};\n"],"names":["h","_ref","children","e","a","t","level","l","n","i","key","m","c","class","Symbol","for","o","r","_$litStatic$","s","_len","arguments","length","Array","_key","reduce","Error","Map","_len2","_key2","u","$","f","push","join","get","raw","set","v","b","E","G","V","w","constructor","this","registeredElements","registeredElementCount","queryPopover","find","has","togglePopovers","composedPath","triggerDisabled","open","from","values","filter","autoClose","includes","forEach","keyDownHandler","defaultPrevented","closeAllPopovers","j","clickHandler","O","registerElement","addListeners","unregisterElement","delete","removeListeners","window","addEventListener","removeEventListener","J","C","super","closeButtonEl","x","focusTrap","K","triggerProp","focusTrapOptions","allowOutsideClick","escapeDeactivates","preventDefault","guid","z","hasLoaded","mutationObserver","q","updateContainerElements","transitionProp","floatingLayout","closable","flipDisabled","focusTrapDisabled","messages","M","offsetDistance","offsetSkidding","overlayPositioning","placement","pointerDisabled","scale","calcitePopoverBeforeClose","cancelable","calcitePopoverBeforeOpen","calcitePopoverClose","calcitePopoverOpen","properties","referenceEl","flipPlacements","heading","headingLevel","label","messageOverrides","referenceElement","styles","reposition","undefined","filteredFlipPlacements","d","arrowEl","p","floatingEl","P","D","type","setFocus","I","requestUpdate","T","el","updateFocusTrapElements","connectedCallback","observe","childList","subtree","setFilteredPlacements","requestAnimationFrame","setUpReferenceElement","load","willUpdate","flipPlacementsHandler","hasUpdated","openHandler","referenceElementHandler","loaded","disconnectedCallback","disconnect","removeReferences","F","U","setExpandedAttr","setFloatingEl","setTransitionEl","transitionEl","getReferenceElement","L","console","warn","tagName","addReferences","getId","id","setAttribute","B","removeAttribute","R","hide","onBeforeOpen","emit","onOpen","activate","onBeforeClose","onClose","H","deactivate","storeArrowEl","renderCloseButton","close","N","renderHeader","S","render","_","ref","inert","ariaLabel","ariaLive","A","role","g","animation","animationActive","k","candidateSelectors","candidateSelector","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","node","lookUp","_node$getAttribute","inertAtt","getAttribute","parentNode","getCandidates","includeContainer","candidates","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","elements","options","elementsToCheck","shift","assigned","assignedElements","nestedCandidates","flatten","scopeParent","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","tabIndex","test","_node$getAttribute2","attValue","isContentEditable","sortOrderedTabbables","documentOrder","isInput","isNonTabbableRadio","isRadio","name","radioSet","radioScope","form","queryRadios","CSS","escape","err","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","displayCheck","getComputedStyle","visibility","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRoot","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","nodeRoot","nodeRootHost","attached","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isNodeAttached","getClientRects","isNodeMatchingSelectorFocusable","disabled","isHiddenInput","some","child","isDetailsWithSummary","item","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","isScope","candidateTabindex","getSortOrderTabIndex","content","sort","acc","sortable","concat","isTabbable","focusableCandidateSelector","isFocusable","activeFocusTraps","trapStack","trap","activeTrap","_setPausedState","trapIndex","indexOf","splice","_isManuallyPaused","isTabEvent","keyCode","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","valueOrHandler","value","params","getActualTarget","event","target","internalTrapStack","createFocusTrap","userOptions","doc","document","config","_objectSpread2","returnFocusOnDeactivate","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","manuallyPaused","delayInitialFocusTimer","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","findIndex","container","tabbableNodes","getNodeForOption","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","_toConsumableArray","querySelector","getInitialFocusNode","tabbableOptions","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","bind","tabbable","focusableNodes","focusable","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","group","_getActiveElement","_tryFocus","focus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref3","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","clickOutsideDeactivates","returnFocus","checkFocusIn","targetContained","Document","nextNode","stopImmediatePropagation","navAcrossContainers","mruContainerIdx","mruTabIdx","checkTabKey","checkKeyNav","checkEscapeKey","isEscapeEvent","checkClick","capture","passive","MutationObserver","mutations","mutation","removedNodes","updateObservedNodes","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","pause","pauseOptions","unpause","unpauseOptions","containerElements","elementsAsArray","Boolean","Object","defineProperties","onPause","onPostPause","onUnpause","onPostUnpause","fallbackFocus","setReturnFocus","extraContainers","isArray","onConnected","onUpdate","onDisconnected","isConnected","focusTrapDisabledOverride","overrideFocusTrapEl","setExtraContainers","strokeWidth"],"sourceRoot":""}