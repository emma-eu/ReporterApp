"use strict";(self.webpackChunkfeedback_map=self.webpackChunkfeedback_map||[]).push([[61948],{12536:(t,e,i)=>{i.d(e,{R:()=>Y});var r=i(15941),s=i(63919),o=i(44680),n=i(34761),a=i(13191),l=i(19555),c=i(72745),h=i(20664),u=i(9392),d=i(55855);function p(t){return function(t){return t instanceof Float32Array&&t.length>=16}(t)||function(t){return Array.isArray(t)&&t.length>=16}(t)}var f=i(2413),_=i(88105),v=i(63048),g=i(22955),y=i(48549),m=i(34981),x=i(40318),w=i(61785),T=i(75803),b=i(45463),A=i(77730),M=i(12028),O=i(86994),E=i(66470);class S{constructor(){this.scale=0,this.factor=0,this.minScaleFactor=0}}var C=i(52757),P=i(99362),R=i(19061),D=i(16506),F=i(59246),I=i(72001),z=i(60322),N=i(93345),B=i(57162);class V extends F.w{constructor(t,e){super(t,e,new D.$(R.H,(()=>i.e(60271).then(i.bind(i,60271))))),this.primitiveType=e.occlusionPass?N.WR.POINTS:N.WR.TRIANGLES}initializePipeline(t){const{oitPass:e,hasPolygonOffset:i,draped:r,output:s,depthTestEnabled:o,occlusionPass:n}=t,a=e===I.Y.NONE,l=e===I.Y.ColorAlpha,c=s===m.V.Highlight,h=o&&!r&&!l&&!n&&!c;return(0,B.Ey)({blending:(0,m.RN)(s)?a?B.Os:(0,z.ez)(e):null,depthTest:o&&!r?{func:N.MT.LEQUAL}:null,depthWrite:h?B.Uy:null,drawBuffers:(0,z.m6)(e,s),colorWrite:B.kn,polygonOffset:i?j:null})}}const j={factor:0,units:-4};var L=i(35143),H=i(97808),U=i(42717),Z=i(6485),W=i(94570);class $ extends W.E{constructor(t){super(),this.spherical=t,this.screenCenterOffsetUnitsEnabled=!1,this.occlusionTestEnabled=!0,this.signedDistanceFieldEnabled=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.vvSize=!1,this.vvColor=!1,this.hasVerticalOffset=!1,this.hasScreenSizePerspective=!1,this.hasRotation=!1,this.debugDrawLabelBorder=!1,this.hasPolygonOffset=!1,this.depthTestEnabled=!0,this.pixelSnappingEnabled=!0,this.draped=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.occlusionPass=!1,this.occludedFragmentFade=!1,this.objectAndLayerIdColorInstanced=!1,this.horizonCullingEnabled=!0,this.isFocused=!0,this.textureCoordinateType=H.I.None,this.emissionSource=U.ZX.None,this.discardInvisibleFragments=!0,this.hasVvInstancing=!1}}(0,L._)([(0,Z.W)()],$.prototype,"screenCenterOffsetUnitsEnabled",void 0),(0,L._)([(0,Z.W)()],$.prototype,"occlusionTestEnabled",void 0),(0,L._)([(0,Z.W)()],$.prototype,"signedDistanceFieldEnabled",void 0),(0,L._)([(0,Z.W)()],$.prototype,"sampleSignedDistanceFieldTexelCenter",void 0),(0,L._)([(0,Z.W)()],$.prototype,"vvSize",void 0),(0,L._)([(0,Z.W)()],$.prototype,"vvColor",void 0),(0,L._)([(0,Z.W)()],$.prototype,"hasVerticalOffset",void 0),(0,L._)([(0,Z.W)()],$.prototype,"hasScreenSizePerspective",void 0),(0,L._)([(0,Z.W)()],$.prototype,"hasRotation",void 0),(0,L._)([(0,Z.W)()],$.prototype,"debugDrawLabelBorder",void 0),(0,L._)([(0,Z.W)()],$.prototype,"hasPolygonOffset",void 0),(0,L._)([(0,Z.W)()],$.prototype,"depthTestEnabled",void 0),(0,L._)([(0,Z.W)()],$.prototype,"pixelSnappingEnabled",void 0),(0,L._)([(0,Z.W)()],$.prototype,"draped",void 0),(0,L._)([(0,Z.W)()],$.prototype,"terrainDepthTest",void 0),(0,L._)([(0,Z.W)()],$.prototype,"cullAboveTerrain",void 0),(0,L._)([(0,Z.W)()],$.prototype,"occlusionPass",void 0),(0,L._)([(0,Z.W)()],$.prototype,"occludedFragmentFade",void 0),(0,L._)([(0,Z.W)()],$.prototype,"objectAndLayerIdColorInstanced",void 0),(0,L._)([(0,Z.W)()],$.prototype,"horizonCullingEnabled",void 0),(0,L._)([(0,Z.W)()],$.prototype,"isFocused",void 0);var G=i(75569);class Y extends b.im{constructor(t,e){super(t,vt),this.produces=new Map([[A.N.HUD_MATERIAL,t=>(0,m.Mb)(t)&&!this.parameters.drawAsLabel],[A.N.LABEL_MATERIAL,t=>(0,m.Mb)(t)&&this.parameters.drawAsLabel],[A.N.OCCLUSION_PIXELS,()=>this.parameters.occlusionTest],[A.N.DRAPED_MATERIAL,t=>this.parameters.draped&&(0,m.Mb)(t)]]),this._visible=!0,this._configuration=new $(e)}getConfiguration(t,e){return this._configuration.output=t,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits,this._configuration.hasPolygonOffset=this.parameters.polygonOffset,this._configuration.draped=this.parameters.draped,this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField,this._configuration.sampleSignedDistanceFieldTexelCenter=this.parameters.sampleSignedDistanceFieldTexelCenter,this._configuration.hasRotation=this.parameters.hasRotation,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.occlusionPass=e.slot===A.N.OCCLUSION_PIXELS,this._configuration.occludedFragmentFade=this.parameters.occludedFragmentFade,this._configuration.horizonCullingEnabled=this.parameters.horizonCullingEnabled,this._configuration.isFocused=this.parameters.isFocused,this._configuration.depthTestEnabled=this.parameters.depthEnabled||e.slot===A.N.OCCLUSION_PIXELS,(0,m.RN)(t)&&(this._configuration.debugDrawLabelBorder=!!g.b.LABELS_SHOW_BORDER),this._configuration.oitPass=e.oitPass,this._configuration.terrainDepthTest=e.terrainDepthTest,this._configuration.cullAboveTerrain=e.cullAboveTerrain,this._configuration}intersect(t,e,i,r,o,a){const{options:{selectionMode:l,hud:c,excludeLabels:d},point:p,camera:f}=i,{parameters:_}=this;if(!l||!c||d&&_.isLabel||!t.visible||!p)return;const{scaleX:v,scaleY:g}=this._getScreenScale(t,f.pixelRatio);(0,s.z0)(ot,e),t.attributes.has(E.r.FEATUREATTRIBUTE)&&function(t){const e=t[0],i=t[1],r=t[2],s=t[3],o=t[4],n=t[5],a=t[6],l=t[7],c=t[8],h=1/Math.sqrt(e*e+i*i+r*r),u=1/Math.sqrt(s*s+o*o+n*n),d=1/Math.sqrt(a*a+l*l+c*c);t[0]=e*h,t[1]=i*h,t[2]=r*h,t[3]=s*u,t[4]=o*u,t[5]=n*u,t[6]=a*d,t[7]=l*d,t[8]=c*d}(ot);const y=t.attributes.get(E.r.POSITION),m=t.attributes.get(E.r.SIZE),x=t.attributes.get(E.r.NORMAL),w=t.attributes.get(E.r.ROTATION),T=t.attributes.get(E.r.CENTEROFFSETANDDISTANCE);(0,O.vA)(y.size>=3);const b=(0,R.c)(_),A="screen"===this.parameters.centerOffsetUnits;for(let s=0;s<y.data.length/y.size;s++){const t=s*y.size;(0,h.i)(K,y.data[t],y.data[t+1],y.data[t+2]),(0,h.t)(K,K,e),(0,h.t)(K,K,f.viewMatrix);const r=s*T.size;if((0,h.i)(lt,T.data[r],T.data[r+1],T.data[r+2]),!A&&(K[0]+=lt[0],K[1]+=lt[1],0!==lt[2])){const t=lt[2];(0,h.n)(lt,K),(0,h.d)(K,K,(0,h.h)(lt,lt,t))}const o=s*x.size;if((0,h.i)(J,x.data[o],x.data[o+1],x.data[o+2]),k(J,ot,f,ut),this._applyVerticalOffsetTransformationView(K,ut,f,Q),f.applyProjection(K,tt),tt[0]>-1){A&&(lt[0]||lt[1])&&(tt[0]+=lt[0]*f.pixelRatio,0!==lt[1]&&(tt[1]+=(0,M.m0)(lt[1],Q.factorAlignment)*f.pixelRatio),f.unapplyProjection(tt,K)),tt[0]+=this.parameters.screenOffset[0]*f.pixelRatio,tt[1]+=this.parameters.screenOffset[1]*f.pixelRatio,tt[0]=Math.floor(tt[0]),tt[1]=Math.floor(tt[1]);const t=s*m.size;ft[0]=m.data[t],ft[1]=m.data[t+1],(0,M.MD)(ft,Q.factor,ft);const e=dt*f.pixelRatio;let r=0;_.textureIsSignedDistanceField&&(r=Math.min(_.outlineSize,.5*ft[0])*f.pixelRatio/2),ft[0]*=v,ft[1]*=g;const o=s*w.size,l=_.rotation+w.data[o];if(X(p,tt[0],tt[1],ft,e,r,l,_,b)){const t=i.ray;if((0,h.t)(it,K,(0,n.B8)(at,f.viewMatrix)),tt[0]=p[0],tt[1]=p[1],f.unprojectFromRenderScreen(tt,K)){const e=(0,u.vt)();(0,h.c)(e,t.direction);const i=1/(0,h.l)(e);(0,h.h)(e,e,i),a((0,h.j)(t.origin,K)*i,e,-1,!0,1,it)}}}}}intersectDraped(t,e,i,r,s,o){const n=t.attributes.get(E.r.POSITION),a=t.attributes.get(E.r.SIZE),l=t.attributes.get(E.r.ROTATION),c=this.parameters,h=(0,R.c)(c),{scaleX:u,scaleY:d}=this._getScreenScale(t,t.screenToWorldRatio),p=pt*t.screenToWorldRatio;for(let f=0;f<n.data.length/n.size;f++){const e=f*n.size,i=n.data[e],_=n.data[e+1],v=f*a.size;ft[0]=a.data[v],ft[1]=a.data[v+1];let g=0;c.textureIsSignedDistanceField&&(g=Math.min(c.outlineSize,.5*ft[0])*t.screenToWorldRatio/2),ft[0]*=u,ft[1]*=d;const y=f*l.size,m=c.rotation+l.data[y];X(r,i,_,ft,p,g,m,c,h)&&s(o.dist,o.normal,-1,!1)}}createBufferWriter(){return new mt}_updateScaleInfo(t,e,i){const r=this.parameters;null!=r.screenSizePerspective?(0,M.cJ)(i,e,r.screenSizePerspective,t.factor):(t.factor.scale=1,t.factor.factor=0,t.factor.minScaleFactor=0),null!=r.screenSizePerspectiveAlignment?(0,M.cJ)(i,e,r.screenSizePerspectiveAlignment,t.factorAlignment):(t.factorAlignment.factor=t.factor.factor,t.factorAlignment.scale=t.factor.scale,t.factorAlignment.minScaleFactor=t.factor.minScaleFactor)}applyShaderOffsetsView(t,e,i,r,s,o,n){const a=k(e,i,s,ut);return this._applyVerticalGroundOffsetView(t,a,s,n),this._applyVerticalOffsetTransformationView(n,a,s,o),this._applyPolygonOffsetView(n,a,r[3],s,n),this._applyCenterOffsetView(n,r,n),n}applyShaderOffsetsNDC(t,e,i,r,s){return this._applyCenterOffsetNDC(t,e,i,r),null!=s&&(0,h.c)(s,r),this._applyPolygonOffsetNDC(r,e,i,r),r}_applyPolygonOffsetView(t,e,i,s,o){const n=s.aboveGround?1:-1;let a=Math.sign(i);0===a&&(a=n);const l=n*a;if(this.parameters.shaderPolygonOffset<=0)return(0,h.c)(o,t);const c=(0,r.qE)(Math.abs(e.cosAngle),.01,1),u=1-Math.sqrt(1-c*c)/c/s.viewport[2];return(0,h.h)(o,t,l>0?u:1/u),o}_applyVerticalGroundOffsetView(t,e,i,r){const s=(0,h.l)(t),o=i.aboveGround?1:-1,n=i.computeRenderPixelSizeAtDist(s)*x.R,a=(0,h.h)(K,e.normal,o*n);return(0,h.g)(r,t,a),r}_applyVerticalOffsetTransformationView(t,e,i,r){const s=this.parameters;if(!s.verticalOffset?.screenLength){if(s.screenSizePerspective||s.screenSizePerspectiveAlignment){const i=(0,h.l)(t);this._updateScaleInfo(r,i,e.cosAngle)}else r.factor.scale=1,r.factorAlignment.scale=1;return t}const o=(0,h.l)(t),n=s.screenSizePerspectiveAlignment??s.screenSizePerspective,a=(0,P.kE)(i,o,s.verticalOffset,e.cosAngle,n);return this._updateScaleInfo(r,o,e.cosAngle),(0,h.h)(e.normal,e.normal,a),(0,h.g)(t,t,e.normal)}_applyCenterOffsetView(t,e,i){const r="screen"!==this.parameters.centerOffsetUnits;return i!==t&&(0,h.c)(i,t),r&&(i[0]+=e[0],i[1]+=e[1],e[2]&&((0,h.n)(J,i),(0,h.g)(i,i,(0,h.h)(J,J,e[2])))),i}_applyCenterOffsetNDC(t,e,i,r){const s="screen"!==this.parameters.centerOffsetUnits;return r!==t&&(0,h.c)(r,t),s||(r[0]+=e[0]/i.fullWidth*2,r[1]+=e[1]/i.fullHeight*2),r}_applyPolygonOffsetNDC(t,e,i,r){const s=this.parameters.shaderPolygonOffset;if(t!==r&&(0,h.c)(r,t),s){const t=i.aboveGround?1:-1,o=t*Math.sign(e[3]);r[2]-=(o||t)*s}return r}set visible(t){this._visible=t}get visible(){const{color:t,outlineSize:e,outlineColor:i}=this.parameters,r=t[3]>=G.Q||e>=G.Q&&i[3]>=G.Q;return this._visible&&r}createGLMaterial(t){return new q(t)}calculateRelativeScreenBounds(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,f.vt)();return function(t,e,i,r){r[0]=t.anchorPosition[0]*-e[0]+t.screenOffset[0]*i,r[1]=t.anchorPosition[1]*-e[1]+t.screenOffset[1]*i}(this.parameters,t,e,i),i[2]=i[0]+t[0],i[3]=i[1]+t[1],i}_getScreenScale(t,e){const i=t.attributes.get(E.r.FEATUREATTRIBUTE);if(null==i)return{scaleX:e,scaleY:e};const r=(0,d.ci)(i.data,ht);return(0,v.VC)(ct,this.parameters,r),{scaleX:ct[0]*e,scaleY:ct[1]*e}}}class q extends T.m8{constructor(t){super({...t,...t.material.parameters})}beginSlot(t){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.getTechnique(V,t)}}function k(t,e,i,r){return p(e)&&(e=(0,s.z0)(nt,e)),(0,h.q)(r.normal,t,e),(0,h.t)(r.normal,r.normal,i.viewInverseTransposeMatrix),r.cosAngle=(0,h.f)(et,_t),r}function X(t,e,i,s,o,n,a,c,h){let u=e-o-s[0]*h[0],d=u+s[0]+2*o,p=i-o-s[1]*h[1],f=p+s[1]+2*o;const _=c.distanceFieldBoundingBox;return c.textureIsSignedDistanceField&&null!=_&&(u+=s[0]*_[0],p+=s[1]*_[1],d-=s[0]*(1-_[2]),f-=s[1]*(1-_[3]),u-=n,d+=n,p-=n,f+=n),(0,l.hZ)(st,e,i),(0,l.e$)(rt,t,st,(0,r.kU)(a)),rt[0]>u&&rt[0]<d&&rt[1]>p&&rt[1]<f}const Q=new class{constructor(){this.factor=new S,this.factorAlignment=new S}},K=(0,u.vt)(),J=(0,u.vt)(),tt=(0,d.vt)(),et=(0,u.vt)(),it=(0,u.vt)(),rt=(0,c.vt)(),st=(0,c.vt)(),ot=(0,o.vt)(),nt=(0,o.vt)(),at=(0,a.vt)(),lt=(0,u.vt)(),ct=(0,u.vt)(),ht=(0,d.vt)(),ut={normal:et,cosAngle:0},dt=1,pt=2,ft=[0,0],_t=(0,u.fA)(0,0,1);class vt extends T.NV{constructor(){super(...arguments),this.renderOccluded=b.m$.Occlude,this.isDecoration=!1,this.color=(0,d.CN)(1,1,1,1),this.polygonOffset=!1,this.anchorPosition=(0,c.fA)(.5,.5),this.screenOffset=[0,0],this.shaderPolygonOffset=1e-5,this.textureIsSignedDistanceField=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.outlineColor=(0,d.CN)(1,1,1,1),this.outlineSize=0,this.distanceFieldBoundingBox=(0,d.vt)(),this.rotation=0,this.hasRotation=!1,this.vvSizeEnabled=!1,this.vvSize=null,this.vvColor=null,this.vvOpacity=null,this.vvSymbolAnchor=null,this.vvSymbolRotationMatrix=null,this.hasSlicePlane=!1,this.pixelSnappingEnabled=!0,this.occlusionTest=!0,this.occludedFragmentFade=!1,this.horizonCullingEnabled=!1,this.centerOffsetUnits="world",this.drawAsLabel=!1,this.depthEnabled=!0,this.isFocused=!0,this.focusEffect="none",this.draped=!1,this.isLabel=!1}}const gt=(0,y.BP)().vec3f(E.r.POSITION).vec3f(E.r.NORMAL).vec2f(E.r.UV0).vec4u8(E.r.COLOR).vec2f(E.r.SIZE).f32(E.r.ROTATION).vec4f(E.r.CENTEROFFSETANDDISTANCE).vec4f(E.r.FEATUREATTRIBUTE),yt=gt.clone().vec4u8(E.r.OBJECTANDLAYERIDCOLOR);class mt{constructor(){this.vertexBufferLayout=(0,w.E)()?yt:gt}elementCount(t){return 6*t.get(E.r.POSITION).indices.length}write(t,e,i,r,s,o){(0,C.Hk)(i.get(E.r.POSITION),t,s.position,o,6),(0,C.p1)(i.get(E.r.NORMAL),e,s.normal,o,6);const n=i.get(E.r.UV0)?.data;let a=0,l=0,c=1,h=1;n&&n.length>=4&&(a=n[0],l=n[1],c=n[2],h=n[3]),c=Math.min(1.99999,c+1),h=Math.min(1.99999,h+1);let u=i.get(E.r.POSITION).indices.length,d=o;const p=s.uv0;for(let _=0;_<u;++_)p.set(d,0,a),p.set(d,1,l),d++,p.set(d,0,c),p.set(d,1,l),d++,p.set(d,0,c),p.set(d,1,h),d++,p.set(d,0,c),p.set(d,1,h),d++,p.set(d,0,a),p.set(d,1,h),d++,p.set(d,0,a),p.set(d,1,l),d++;(0,C.tb)(i.get(E.r.COLOR),4,s.color,o,6);const{data:f,indices:v}=i.get(E.r.SIZE);u=v.length;const g=s.size;d=o;for(let _=0;_<u;++_){const t=f[2*v[_]],e=f[2*v[_]+1];for(let i=0;i<6;++i)g.set(d,0,t),g.set(d,1,e),d++}if((0,C.uO)(i.get(E.r.ROTATION),s.rotation,o,6),i.get(E.r.CENTEROFFSETANDDISTANCE)?(0,C.Ut)(i.get(E.r.CENTEROFFSETANDDISTANCE),s.centerOffsetAndDistance,o,6):(0,C.Pq)(s.centerOffsetAndDistance,o,6*u),i.get(E.r.FEATUREATTRIBUTE)?(0,C.Ut)(i.get(E.r.FEATUREATTRIBUTE),s.featureAttribute,o,6):(0,C.Pq)(s.featureAttribute,o,6*u),null!=r){const t=i.get(E.r.POSITION)?.indices;if(t){const e=t.length,i=s.getField(E.r.OBJECTANDLAYERIDCOLOR,_.XP);(0,C.tH)(r,i,e,o,6)}}}}},19061:(t,e,i)=>{i.d(e,{H:()=>B,b:()=>F,c:()=>z});var r=i(19555),s=i(72745),o=i(55855),n=i(14556),a=i(34981),l=i(26917),c=i(90080),h=i(98720),u=i(40318),d=i(38280),p=i(62374),f=i(20469),_=i(66763),v=i(80883),g=i(81449),y=i(69817),m=i(3799),x=i(95756),w=i(51596),T=i(20123),b=i(58350),A=i(23148),M=i(21390),O=i(86955),E=i(4653),S=i(70367),C=i(72001),P=i(66470),R=i(2687),D=i(75569);function F(t){const e=new R.N5,i=t.signedDistanceFieldEnabled;e.include(u.Q,t),e.vertex.include(l.rA,t);const{occlusionPass:s,output:F,oitPass:B}=t;if(s)return e.include(d.I,t),e;const{vertex:V,fragment:j}=e;e.include(y.Y6),e.include(_.A,t),e.include(c.g,t),e.include(p.y),j.include(g.W),j.include(v.a),e.varyings.add("vcolor","vec4"),e.varyings.add("vtc","vec2"),e.varyings.add("vsize","vec2");const L=F===a.V.Highlight,H=L&&t.occlusionTestEnabled;H&&e.varyings.add("voccluded","float"),V.uniforms.add(new w.I("viewport",(t=>t.camera.fullViewport)),new x.G("screenOffset",((t,e)=>(0,r.hZ)(N,2*t.screenOffset[0]*e.camera.pixelRatio,2*t.screenOffset[1]*e.camera.pixelRatio))),new x.G("anchorPosition",(t=>z(t))),new b.E("materialColor",(t=>t.color)),new M.m("materialRotation",(t=>t.rotation))),(0,m.Nz)(V),i&&(V.uniforms.add(new b.E("outlineColor",(t=>t.outlineColor))),j.uniforms.add(new b.E("outlineColor",(t=>I(t)?t.outlineColor:o.uY)),new M.m("outlineSize",(t=>I(t)?t.outlineSize:0)))),t.horizonCullingEnabled&&V.uniforms.add(new T.V("pointDistanceSphere",((t,e)=>{const i=e.camera.eye,r=t.origin;return(0,o.fA)(r[0]-i[0],r[1]-i[1],r[2]-i[2],n.$O.radius)}))),t.pixelSnappingEnabled&&V.include(h.K),t.hasScreenSizePerspective&&((0,y.pM)(V),(0,y.OH)(V)),t.debugDrawLabelBorder&&e.varyings.add("debugBorderCoords","vec4"),e.attributes.add(P.r.UV0,"vec2"),e.attributes.add(P.r.COLOR,"vec4"),e.attributes.add(P.r.SIZE,"vec2"),e.attributes.add(P.r.ROTATION,"float"),e.attributes.add(P.r.FEATUREATTRIBUTE,"vec4"),V.code.add(t.horizonCullingEnabled?O.H`bool behindHorizon(vec3 posModel) {
vec3 camToEarthCenter = pointDistanceSphere.xyz - localOrigin;
vec3 camToPos = pointDistanceSphere.xyz + posModel;
float earthRadius = pointDistanceSphere.w;
float a = dot(camToPos, camToPos);
float b = dot(camToPos, camToEarthCenter);
float c = dot(camToEarthCenter, camToEarthCenter) - earthRadius * earthRadius;
return  b > 0.0 && b < a && b * b  > a * c;
}`:O.H`bool behindHorizon(vec3 posModel) { return false; }`),V.main.add(O.H`
      ProjectHUDAux projectAux;
      vec4 posProj = projectPositionHUD(projectAux);
      forwardObjectAndLayerIdColor();

      if (rejectBySlice(projectAux.posModel)) {
        // Project outside of clip plane
        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
        return;
      }

      if (behindHorizon(projectAux.posModel)) {
        // Project outside of clip plane
        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
        return;
      }

      vec2 inputSize;
      ${(0,O.If)(t.hasScreenSizePerspective,O.H`
          inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);
          vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);`,O.H`
          inputSize = size;
          vec2 screenOffsetScaled = screenOffset;`)}
      ${(0,O.If)(t.vvSize,O.H`inputSize *= vvScale(featureAttribute).xx;`)}

      vec2 combinedSize = inputSize * pixelRatio;
      vec4 quadOffset = vec4(0.0);

      ${(0,O.If)(t.occlusionTestEnabled,O.H`
      bool visible = testHUDVisibility(posProj);
      if (!visible) {
        vtc = vec2(0.0);
        ${(0,O.If)(t.debugDrawLabelBorder,"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);")}
        return;
      }`)}
      ${(0,O.If)(H,O.H`voccluded = visible ? 0.0 : 1.0;`)}
    `);const U=O.H`
      vec2 uv01 = floor(uv0);
      vec2 uv = uv0 - uv01;
      quadOffset.xy = (uv01 - anchorPosition) * 2.0 * combinedSize;

      ${(0,O.If)(t.hasRotation,O.H`
          float angle = radians(materialRotation + rotation);
          float cosAngle = cos(angle);
          float sinAngle = sin(angle);
          mat2 rotate = mat2(cosAngle, -sinAngle, sinAngle,  cosAngle);

          quadOffset.xy = rotate * quadOffset.xy;
        `)}

      quadOffset.xy = (quadOffset.xy + screenOffsetScaled) / viewport.zw * posProj.w;
  `,Z=t.pixelSnappingEnabled?i?O.H`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:O.H`posProj += quadOffset;
if (inputSize.x == size.x) {
posProj = alignToPixelOrigin(posProj, viewport.zw);
}`:O.H`posProj += quadOffset;`;V.main.add(O.H`
    ${U}
    ${t.vvColor?"vcolor = interpolateVVColor(featureAttribute.y) * materialColor;":"vcolor = color / 255.0 * materialColor;"}

    ${(0,O.If)(F===a.V.ObjectAndLayerIdColor,O.H`vcolor.a = 1.0;`)}

    bool alphaDiscard = vcolor.a < ${O.H.float(D.Q)};
    ${(0,O.If)(i,`alphaDiscard = alphaDiscard && outlineColor.a < ${O.H.float(D.Q)};`)}
    if (alphaDiscard) {
      // "early discard" if both symbol color (= fill) and outline color (if applicable) are transparent
      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
      return;
    } else {
      ${Z}
      gl_Position = posProj;
    }

    vtc = uv;

    ${(0,O.If)(t.debugDrawLabelBorder,O.H`debugBorderCoords = vec4(uv01, 1.5 / combinedSize);`)}
    vsize = inputSize;
  `),j.uniforms.add(new S.N("tex",(t=>t.texture))),t.occludedFragmentFade&&(j.uniforms.add(new E.x("depthMap",(t=>t.mainDepth))),j.uniforms.add(new A.U("occludedOpacity",(t=>t.hudOccludedFragmentOpacity))));const W=t.debugDrawLabelBorder?O.H`(isBorder > 0.0 ? 0.0 : ${O.H.float(D.Q)})`:O.H.float(D.Q),$=O.H`
    ${(0,O.If)(t.debugDrawLabelBorder,O.H`float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`)}

    ${(0,O.If)(t.sampleSignedDistanceFieldTexelCenter,O.H`
      float txSize = float(textureSize(tex, 0).x);
      float texelSize = 1.0 / txSize;

      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel
      vec2 scaleFactor = (vsize - txSize) * texelSize;
      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;`,O.H`vec2 samplePos = vtc;`)}

    ${i?O.H`
      vec4 fillPixelColor = vcolor;

      // Get distance and map it into [-0.5, 0.5]
      float d = rgbaTofloat(texture(tex, samplePos)) - 0.5;

      // Distance in output units (i.e. pixels)
      float dist = d * vsize.x;

      // Create smooth transition from the icon into its outline
      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);
      fillPixelColor.a *= fillAlphaFactor;

      if (outlineSize > 0.25) {
        vec4 outlinePixelColor = outlineColor;
        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);

        // Create smooth transition around outline
        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);
        outlinePixelColor.a *= outlineAlphaFactor;

        if (
          outlineAlphaFactor + fillAlphaFactor < ${W} ||
          fillPixelColor.a + outlinePixelColor.a < ${O.H.float(D.Q)}
        ) {
          discard;
        }

        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)
        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);
        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +
          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);

        ${(0,O.If)(!L,O.H`fragColor = vec4(compositeColor, compositeAlpha);`)}
      } else {
        if (fillAlphaFactor < ${W}) {
          discard;
        }

        ${(0,O.If)(!L,O.H`fragColor = premultiplyAlpha(fillPixelColor);`)}
      }

      // visualize SDF:
      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);
      `:O.H`
          vec4 texColor = texture(tex, vtc, -0.5);
          if (texColor.a < ${W}) {
            discard;
          }
          ${(0,O.If)(!L,O.H`fragColor = texColor * premultiplyAlpha(vcolor);`)}
          `}

    ${(0,O.If)(t.occludedFragmentFade&&!L,O.H`
        float zSample = texelFetch(depthMap, ivec2(gl_FragCoord.xy), 0).x;
        if (zSample < gl_FragCoord.z) {
          fragColor *= occludedOpacity;
        }
        `)}

    ${(0,O.If)(!L&&t.debugDrawLabelBorder,O.H`fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`)}
  `;switch(F){case a.V.Color:case a.V.ColorEmission:e.outputs.add("fragColor","vec4",0),F===a.V.ColorEmission&&e.outputs.add("fragEmission","vec4",1),B===C.Y.ColorAlpha&&e.outputs.add("fragAlpha","float",F===a.V.ColorEmission?2:1),j.main.add(O.H`
        ${$}
        ${(0,O.If)(B===C.Y.FrontFace,O.H`fragColor.rgb /= fragColor.a;`)}
        ${(0,O.If)(F===a.V.ColorEmission,O.H`fragEmission = vec4(0.0);`)}
        ${(0,O.If)(B===C.Y.ColorAlpha,O.H`fragAlpha = fragColor.a;`)}`);break;case a.V.ObjectAndLayerIdColor:j.main.add(O.H`
        ${$}
        outputObjectAndLayerIdColor();`);break;case a.V.Highlight:e.include(f.Q,t),j.main.add(O.H`
        ${$}
        outputHighlight(${(0,O.If)(H,O.H`voccluded == 1.0`,O.H`false`)});`)}return e}function I(t){return t.outlineColor[3]>0&&t.outlineSize>0}function z(t){return t.textureIsSignedDistanceField?(e=t.anchorPosition,i=t.distanceFieldBoundingBox,s=N,(0,r.hZ)(s,e[0]*(i[2]-i[0])+i[0],e[1]*(i[3]-i[1])+i[1])):(0,r.C)(N,t.anchorPosition),N;var e,i,s}const N=(0,s.vt)(),B=Object.freeze(Object.defineProperty({__proto__:null,build:F,calculateAnchorPosition:z},Symbol.toStringTag,{value:"Module"}))},21812:(t,e,i)=>{i.d(e,{_:()=>r});class r{constructor(t,e,i,r,s){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;this.name=t,this.count=e,this.type=i,this.offset=r,this.stride=s,this.normalized=o,this.divisor=n}}},36911:(t,e,i)=>{i.d(e,{Z:()=>c});var r=i(76460),s=i(30726),o=i(97255),n=i(93345),a=i(27207);const l=()=>r.A.getLogger("esri.views.webgl.VertexArrayObject");let c=class{constructor(t,e,i,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._context=t,this._locations=e,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Array.from(this._buffers.values()).reduce(((t,e)=>t+e.usedMemory),null!=this._indexBuffer?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(this._buffers.size+(this._indexBuffer?1:0))*o.i5}get cachedMemory(){return this.usedMemory}dispose(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._buffers.forEach((t=>t.dispose())),this._buffers.clear(),this._indexBuffer=(0,s.WD)(this._indexBuffer),this.disposeVAOOnly()):(this._glName||this._buffers.size>0)&&l().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(n.vt.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:t}=this._context,e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e,this._context.instanceCounter.increment(n.vt.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:i}=this;t||l().error("Vertex buffer dictionary is empty!");const r=this._context.gl;this._buffers.forEach(((t,i)=>{const r=e.get(i);r?(0,a.yu)(this._context,this._locations,t,r):l().error("Vertex element descriptor is empty!")})),null!=i&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}}},38280:(t,e,i)=>{i.d(e,{I:()=>n});var r=i(98720),s=i(94192),o=i(86955);function n(t,e){const{vertex:i,fragment:n}=t;t.include(s.Z,e),i.include(r.K),i.main.add(o.H`vec4 posProjCenter;
if (dot(position, position) > 0.0) {
ProjectHUDAux projectAux;
vec4 posProj = projectPositionHUD(projectAux);
posProjCenter = alignToPixelCenter(posProj, viewport.zw);
forwardViewPosDepth(projectAux.posView);
vec3 vpos = projectAux.posModel;
if (rejectBySlice(vpos)) {
posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
}
} else {
posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
}
gl_Position = posProjCenter;
gl_PointSize = 1.0;`),n.main.add(o.H`fragColor = vec4(1);
if(discardByTerrainDepth()) {
fragColor.g = 0.5;
}`)}},57481:(t,e,i)=>{i.d(e,{U:()=>o});var r=i(93345),s=i(21812);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const i=t.stride;return Array.from(t.fields.keys()).map((r=>{const o=t.fields.get(r),a=o.constructor.ElementCount,l=n(o.constructor.ElementType),c=o.offset,h=o.optional?.glNormalized??!1;return new s._(r,a,l,c,i,h,e)}))}function n(t){const e=a[t];if(e)return e;throw new Error("BufferType not supported in WebGL")}const a={u8:r.pe.UNSIGNED_BYTE,u16:r.pe.UNSIGNED_SHORT,u32:r.pe.UNSIGNED_INT,i8:r.pe.BYTE,i16:r.pe.SHORT,i32:r.pe.INT,f32:r.pe.FLOAT}},57583:(t,e,i)=>{i.d(e,{A:()=>O});var r=i(35143),s=i(91967),o=i(76460),n=i(15941),a=i(76931),l=i(46053),c=(i(81806),i(47249),i(85842)),h=i(34761),u=i(13191),d=i(19555),p=i(72745),f=i(20664),_=i(9392),v=i(43047),g=i(55855),y=i(4763),m=i(95925),x=i(96190),w=i(64465);var T,b,A;i(30015);!function(t){t[t.Default=0]="Default",t[t.Screenshot=1]="Screenshot",t[t.ObjectAndLayerID=2]="ObjectAndLayerID"}(T||(T={})),function(t){t[t.TOP=0]="TOP",t[t.RIGHT=1]="RIGHT",t[t.BOTTOM=2]="BOTTOM",t[t.LEFT=3]="LEFT"}(b||(b={}));let M=A=class extends s.A{constructor(t){super(t),this._ray=(0,m.vt)(),this._viewport=(0,g.fA)(0,0,1,1),this._padding=(0,g.fA)(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=(0,p.fA)(1,1e3),this._viewDirty=!0,this._viewMatrix=(0,u.vt)(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=(0,u.vt)(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=(0,u.vt)(),this._frustumDirty=!0,this._frustum=(0,y.vt)(),this._fullViewport=(0,g.vt)(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=(0,_.vt)(),this._up=(0,_.vt)(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(t){this._pixelRatio=t>0?t:1}get rows(){return this._rows}set rows(t){this._rows=Math.max(1,t)}get columns(){return this._columns}set columns(t){this._columns=Math.max(1,t)}get eye(){return this._ray.origin}set eye(t){this._compareAndSetView(t,this._ray.origin)}get center(){return this._center}set center(t){this._compareAndSetView(t,this._center,"_center")}get ray(){return(0,f.d)(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(t){this._compareAndSetView(t,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(t){(0,h.C)(this._viewMatrix,t),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),(0,f.i)((0,_.vt)(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),(0,f.i)((0,_.vt)(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),(0,f.i)((0,_.vt)(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(t){this._nearFar[0]!==t&&(this._nearFar[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(t){this._nearFar[1]!==t&&(this._nearFar[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(t){this.x=t[0],this.y=t[1],this.width=t[2],this.height=t[3]}get screenViewport(){if(1===this.pixelRatio)return this._viewport;const t=(0,v.b)((0,g.vt)(),this._viewport,1/this.pixelRatio),e=this._get("screenViewport");return e&&(0,v.e)(t,e)?e:t}get screenPadding(){if(1===this.pixelRatio)return this._padding;const t=(0,v.b)((0,g.vt)(),this._padding,1/this.pixelRatio),e=this._get("screenPadding");return e&&(0,v.e)(t,e)?e:t}get x(){return this._viewport[0]}set x(t){t+=this._padding[b.LEFT],this._viewport[0]!==t&&(this._viewport[0]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(t){t+=this._padding[b.BOTTOM],this._viewport[1]!==t&&(this._viewport[1]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(t){this._viewport[2]!==t&&(this._viewport[2]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(t){this._viewport[3]!==t&&(this._viewport[3]=t,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[b.RIGHT]+this._padding[b.LEFT]}set fullWidth(t){this.width=t-(this._padding[b.RIGHT]+this._padding[b.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[b.TOP]+this._padding[b.BOTTOM]}set fullHeight(t){this.height=t-(this._padding[b.TOP]+this._padding[b.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[b.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[b.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(t){(0,v.a)(this._padding,t)||(this._viewport[0]+=t[b.LEFT]-this._padding[b.LEFT],this._viewport[1]+=t[b.BOTTOM]-this._padding[b.BOTTOM],this._viewport[2]-=t[b.RIGHT]+t[b.LEFT]-(this._padding[b.RIGHT]+this._padding[b.LEFT]),this._viewport[3]-=t[b.TOP]+t[b.BOTTOM]-(this._padding[b.TOP]+this._padding[b.BOTTOM]),(0,v.c)(this._padding,t),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&((0,h.lw)(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return(0,h.B8)((0,u.vt)(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||(0,u.vt)()}get fov(){return this._fov}set fov(t){this._fov=t,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return function(t,e,i){return 2*Math.atan(e*Math.tan(.5*t)/Math.sqrt(e*e+i*i))}(this._fov,this.width,this.height)}set fovX(t){this._fov=function(t,e,i){return 2*Math.atan(Math.sqrt(e*e+i*i)*Math.tan(.5*t)/e)}(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return function(t,e,i){return 2*Math.atan(i*Math.tan(.5*t)/Math.sqrt(e*e+i*i))}(this._fov,this.width,this.height)}set fovY(t){this._fov=function(t,e,i){return 2*Math.atan(Math.sqrt(e*e+i*i)*Math.tan(.5*t)/i)}(t,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return(0,f.j)(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&((0,h.B8)(this._viewInverseTransposeMatrix,this.viewMatrix),(0,h.mg)(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(t){const{near:e,far:i}=this;return 2*e*i/(i+e-t*(i-e))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return null!=this.relativeElevation&&this.relativeElevation>=0}get _projectionMatrixInternal(){const t=this.width,e=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,s=i/this.rows,o=r/this.columns,n=-r/2+this.column*o,a=n+o,l=-i/2+this.row*s,c=l+s,d=(0,h.$h)((0,u.vt)(),n*(1+2*this._padding[b.LEFT]/t),a*(1+2*this._padding[b.RIGHT]/t),l*(1+2*this._padding[b.BOTTOM]/e),c*(1+2*this._padding[b.TOP]/e),this.near,this.far),p=this._get("projectionMatrix");return p&&(0,h.aI)(p,d)?p:d}copyFrom(t){(0,f.c)(this._ray.origin,t.eye),this.center=t.center,this.up=t.up,(0,v.c)(this._viewport,t.viewport),this.notifyChange("_viewport"),(0,v.c)(this._padding,t.padding),this.notifyChange("_padding"),(0,d.C)(this._nearFar,t.nearFar),this.notifyChange("_nearFar"),this._fov=t.fov,this.row=t.row,this.column=t.column,this.rows=t.rows,this.columns=t.columns,this.relativeElevation=t.relativeElevation;const e=t;return this._viewDirty=e._viewDirty,this._viewDirty||((0,h.C)(this._viewMatrix,t.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=e._frustumDirty,this._frustumDirty||((0,y.C)(this._frustum,t.frustum),this._frustumDirty=!1),e._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:((0,h.C)(this._viewInverseTransposeMatrix,t.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),(0,v.c)(this._fullViewport,t.fullViewport),this.pixelRatio=t.pixelRatio,this}copyViewFrom(t){this.eye=t.eye,this.center=t.center,this.up=t.up,this.fov=t.fov}clone(){return(new A).copyFrom(this)}equals(t){return(0,f.p)(this.eye,t.eye)&&(0,f.p)(this.center,t.center)&&(0,f.p)(this.up,t.up)&&(0,v.a)(this._viewport,t.viewport)&&(0,v.a)(this._padding,t.padding)&&(0,d.t2)(this.nearFar,t.nearFar)&&this._fov===t.fov&&this.pixelRatio===t.pixelRatio&&this.relativeElevation===t.relativeElevation&&this.row===t.row&&this.column===t.column&&this.rows===t.rows&&this.columns===t.columns}almostEquals(t){const e=Math.max(1,1/this.pixelRatio,1/t.pixelRatio);if(Math.abs(t.fov-this._fov)>=.001||(0,v.d)(t.screenPadding,this.screenPadding)>=e||(0,v.d)(this.screenViewport,t.screenViewport)>=e||this.row!==t.row||this.column!==t.column||this.rows!==t.rows||this.columns!==t.columns)return!1;(0,f.a)(C,t.eye,t.center),(0,f.a)(P,this.eye,this.center);const i=(0,f.f)(C,P),r=(0,f.z)(C),s=(0,f.z)(P),o=5e-4;return i*i>=(1-1e-10)*r*s&&(0,f.y)(t.eye,this.eye)<Math.max(r,s)*o*o}computeRenderPixelSizeAt(t){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(t))}computeRenderPixelSizeAtDist(t){return t*this.perRenderPixelRatio}computeScreenPixelSizeAt(t){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(t))}_viewDirectionDistance(t){return Math.abs((0,x.gr)(this.viewForward,(0,f.d)(C,t,this.eye)))}computeScreenPixelSizeAtDist(t){return t*this.perScreenPixelRatio}computeDistanceFromRadius(t,e){return t/Math.tan(Math.min(this.fovX,this.fovY)/(2*(e||1)))}getScreenCenter(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,a.gs)();return t[0]=(this.padding[b.LEFT]+this.width/2)/this.pixelRatio,t[1]=(this.padding[b.TOP]+this.height/2)/this.pixelRatio,t}getRenderCenter(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return t[0]=this.padding[b.LEFT]+this.width*e,t[1]=this.padding[b.BOTTOM]+this.height*i,t[2]=.5,t}setGLViewport(t){const e=this.viewport,i=this.padding;t.setViewport(e[0]-i[3],e[1]-i[2],e[2]+i[1]+i[3],e[3]+i[0]+i[2])}applyProjection(t,e){t!==E&&(0,f.c)(E,t),E[3]=1,(0,v.t)(E,E,this.projectionMatrix);const i=Math.abs(E[3]);(0,f.h)(E,E,1/i);const r=this.fullViewport;e[0]=(0,n.Cc)(0,r[0]+r[2],.5+.5*E[0]),e[1]=(0,n.Cc)(0,r[1]+r[3],.5+.5*E[1]),e[2]=.5*(E[2]+1),e[3]=i}unapplyProjection(t,e){const i=this.fullViewport;E[0]=(t[0]/(i[0]+i[2])*2-1)*t[3],E[1]=(t[1]/(i[1]+i[3])*2-1)*t[3],E[2]=(2*t[2]-1)*t[3],E[3]=t[3],null!=this.inverseProjectionMatrix&&((0,v.t)(E,E,this.inverseProjectionMatrix),e[0]=E[0],e[1]=E[1],e[2]=E[2])}projectToScreen(t,e){return this.projectToRenderScreen(t,R),this.renderToScreen(R,e),e}projectToRenderScreen(t,e){if(E[0]=t[0],E[1]=t[1],E[2]=t[2],E[3]=1,(0,v.t)(E,E,this.viewProjectionMatrix),0===E[3])return null;const i=E;(0,f.h)(i,i,1/Math.abs(E[3]));const r=this.fullViewport,s=(0,n.Cc)(0,r[0]+r[2],.5+.5*i[0]),o=(0,n.Cc)(0,r[1]+r[3],.5+.5*i[1]);return"x"in e?(e.x=s,e.y=o):(e[0]=s,e[1]=o,e.length>2&&(e[2]=.5*(i[2]+1))),e}unprojectFromScreen(t,e){return this.unprojectFromRenderScreen(this.screenToRender(t,R),e)}unprojectFromRenderScreen(t,e){if((0,h.lw)(S,this.projectionMatrix,this.viewMatrix),!(0,h.B8)(S,S))return null;const i=this.fullViewport;return E[0]=2*(t[0]-i[0])/i[2]-1,E[1]=2*(t[1]-i[1])/i[3]-1,E[2]=2*t[2]-1,E[3]=1,(0,v.t)(E,E,S),0===E[3]?null:(e[0]=E[0]/E[3],e[1]=E[1]/E[3],e[2]=E[2]/E[3],e)}constrainWindowSize(t,e,i,r){const s=t*this.pixelRatio,o=e*this.pixelRatio,n=Math.max(s-i/2,0),a=Math.max(this.fullHeight-o-r/2,0),l=-Math.min(s-i/2,0),c=-Math.min(this.fullHeight-o-r/2,0),h=i-l- -Math.min(this.fullWidth-s-i/2,0),u=r-c- -Math.min(o-r/2,0);return[Math.round(n),Math.round(a),Math.round(h),Math.round(u)]}computeUp(t){t===w.RT.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(t,e){const i=t[0]*this.pixelRatio,r=this.fullHeight-t[1]*this.pixelRatio;return e[0]=i,e[1]=r,e}renderToScreen(t,e){const i=t[0]/this.pixelRatio,r=(this.fullHeight-t[1])/this.pixelRatio;e[0]=i,e[1]=r}_computeUpGlobal(){(0,f.d)(C,this.center,this.eye);const t=(0,f.l)(this.center);t<1?((0,f.i)(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs((0,f.f)(C,this.center))>.9999*(0,f.l)(C)*t||((0,f.e)(this._up,C,this.center),(0,f.e)(this._up,this._up,C),(0,f.n)(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){(0,f.o)(C,this.eye,this.center),Math.abs(C[2])<=.9999&&((0,f.h)(C,C,C[2]),(0,f.i)(this._up,-C[0],-C[1],1-C[2]),(0,f.n)(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";"number"==typeof t[0]&&isFinite(t[0])&&"number"==typeof t[1]&&isFinite(t[1])&&"number"==typeof t[2]&&isFinite(t[2])?(0,f.p)(t,e)||((0,f.c)(e,t),this._markViewDirty(),i.length&&this.notifyChange(i)):o.A.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&((0,y.ui)(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&((0,h.t5)(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};(0,r._)([(0,l.MZ)()],M.prototype,"_viewport",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_padding",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_fov",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_nearFar",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_viewDirty",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_viewMatrix",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_pixelRatio",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"pixelRatio",null),(0,r._)([(0,l.MZ)()],M.prototype,"row",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"column",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"_rows",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"rows",null),(0,r._)([(0,l.MZ)()],M.prototype,"_columns",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"columns",null),(0,r._)([(0,l.MZ)()],M.prototype,"eye",null),(0,r._)([(0,l.MZ)()],M.prototype,"center",null),(0,r._)([(0,l.MZ)()],M.prototype,"_center",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"up",null),(0,r._)([(0,l.MZ)()],M.prototype,"_up",void 0),(0,r._)([(0,l.MZ)()],M.prototype,"viewMatrix",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"viewForward",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"viewUp",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"viewRight",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"nearFar",null),(0,r._)([(0,l.MZ)()],M.prototype,"near",null),(0,r._)([(0,l.MZ)()],M.prototype,"far",null),(0,r._)([(0,l.MZ)()],M.prototype,"viewport",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"screenViewport",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"screenPadding",null),(0,r._)([(0,l.MZ)()],M.prototype,"x",null),(0,r._)([(0,l.MZ)()],M.prototype,"y",null),(0,r._)([(0,l.MZ)()],M.prototype,"width",null),(0,r._)([(0,l.MZ)()],M.prototype,"height",null),(0,r._)([(0,l.MZ)()],M.prototype,"fullWidth",null),(0,r._)([(0,l.MZ)()],M.prototype,"fullHeight",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"_aspect",null),(0,r._)([(0,l.MZ)()],M.prototype,"padding",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"projectionMatrix",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"inverseProjectionMatrix",null),(0,r._)([(0,l.MZ)()],M.prototype,"fov",null),(0,r._)([(0,l.MZ)()],M.prototype,"fovX",null),(0,r._)([(0,l.MZ)()],M.prototype,"fovY",null),(0,r._)([(0,l.MZ)()],M.prototype,"viewInverseTransposeMatrix",null),(0,r._)([(0,l.MZ)({readOnly:!0})],M.prototype,"_projectionMatrixInternal",null),(0,r._)([(0,l.MZ)()],M.prototype,"relativeElevation",void 0),M=A=(0,r._)([(0,c.$)("esri.views.3d.webgl.RenderCamera")],M);const O=M,E=(0,g.vt)(),S=(0,u.vt)(),C=(0,_.vt)(),P=(0,_.vt)(),R=(0,a.r_)()},60216:(t,e,i)=>{i.d(e,{E:()=>o});var r=i(9392),s=(i(9624),i(14487));function o(t,e,i){return!!(0,s.F)(t,e,n,i.spatialReference)&&(i.x=n[0],i.y=n[1],i.z=n[2],!0)}const n=(0,r.vt)()},60586:(t,e,i)=>{i.d(e,{Cc:()=>l,RW:()=>a});var r=i(91967),s=i(34981);const o={required:[]};s.V.Depth;class n extends r.A{precompile(t){return!!this.acquireTechniques(t)}consumes(){return o}get usedMemory(){return 0}get isDecoration(){return!1}get running(){return!1}modify(t){}get numGeometries(){return 0}get hasOccludees(){return!1}get hasEmissions(){return!1}forEachGeometry(t){}queryRenderOccludedState(t){return!1}}class a extends n{}class l extends n{}},69008:(t,e,i)=>{i.d(e,{Z:()=>s});var r=i(36911);class s extends r.Z{}},76718:(t,e,i)=>{i.d(e,{g:()=>c});var r=i(18690),s=(i(81806),i(76460)),o=i(78393),n=i(61678),a=i(93345);const l=()=>s.A.getLogger("esri.views.webgl.BufferObject");class c{static createIndex(t,e,i){return new c(t,a.NZ.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new c(t,a.NZ.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){return new c(t,a.NZ.UNIFORM_BUFFER,e,i)}static createPixelPack(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a._U.STREAM_READ,i=arguments.length>2?arguments[2]:void 0;const r=new c(t,a.NZ.PIXEL_PACK_BUFFER,e);return i&&r.setSize(i),r}static createPixelUnpack(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a._U.STREAM_DRAW,i=arguments.length>2?arguments[2]:void 0;return new c(t,a.NZ.PIXEL_UNPACK_BUFFER,e,i)}static createTransformFeedback(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a._U.STATIC_DRAW,i=arguments.length>2?arguments[2]:void 0;const r=new c(t,a.NZ.TRANSFORM_FEEDBACK_BUFFER,e);return r.setSize(i),r}constructor(t,e,i,r){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(a.vt.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,n.Y2)(this._context.gl),r&&this.setData(r)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){if(this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER){if(this._indexType===a.pe.UNSIGNED_INT)return 4*this._size;if(this._indexType===a.pe.UNSIGNED_SHORT)return 2*this._size}return this._size}get _isVAOAware(){return this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER||this.bufferType===a.NZ.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(a.vt.BufferObject,this),this._context=null):this._glName&&l().warn("Leaked WebGL buffer object")}setSize(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case a.pe.UNSIGNED_SHORT:t*=2;break;case a.pe.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER&&((0,o.mg)(t)?this._indexType=a.pe.UNSIGNED_BYTE:(0,o.jq)(t)?(e/=2,this._indexType=a.pe.UNSIGNED_SHORT):(0,o.XJ)(t)&&(e/=4,this._indexType=a.pe.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;null!=e?r.bufferData(this.bufferType,e,this.usage):r.bufferData(this.bufferType,t,this.usage),(0,n.Y2)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e,i,r){if(!t)return;const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:o}=this._context;o.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,r-i),(0,n.Y2)(o),this._isVAOAware&&this._context.bindVAO(s)}getSubData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;if(i<0||s<0)return;const o=function(t){return(0,r.Xj)(t)}(t)?t.BYTES_PER_ELEMENT:1;if(o*((i??0)+(s??0))>t.byteLength)return;e+o*(s??0)>this.usedMemory&&l().warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this.bufferType===a.NZ.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,a.NZ.TRANSFORM_FEEDBACK_BUFFER),n.getBufferSubData(a.NZ.TRANSFORM_FEEDBACK_BUFFER,e,t,i,s),this._context.unbindBuffer(a.NZ.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,a.NZ.COPY_READ_BUFFER),n.getBufferSubData(a.NZ.COPY_READ_BUFFER,e,t,i,s),this._context.unbindBuffer(a.NZ.COPY_READ_BUFFER))}async getSubDataAsync(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;await this._context.clientWaitAsync(),this.getSubData(t,e,i,r)}}}}]);
//# sourceMappingURL=61948.95c4af67.chunk.js.map