"use strict";(self.webpackChunkfeedback_map=self.webpackChunkfeedback_map||[]).push([[78764],{5294:(e,t,r)=>{r.r(t),r.d(t,{default:()=>J});var o,s=r(76797),i=r(19247),n=r(64681),l=r(66486),a=r(37267),f=r(52494),c=r(81633),p=r(59844),m=r(86866),u=r(99846),y=r(26855),h=r(35143),d=(r(76460),r(81806),r(47249),r(50076),r(6409)),x=r(85842),v=r(75116);let C=o=class extends v.A{constructor(){super(...arguments),this.type="identity"}clone(){return new o}};(0,h._)([(0,d.e)({IdentityXform:"identity"})],C.prototype,"type",void 0),C=o=(0,h._)([(0,x.$)("esri.layers.support.rasterTransforms.IdentityTransform")],C);const S=C;var w=r(29754);const A={GCSShiftXform:y.A,IdentityXform:S,PolynomialXform:w.A};function g(e){const t=e?.type;if(!t)return null;const r=A[e?.type];if(r){const t=new r;return t.read(e),t}return null}var O=r(20118),_=r(46533);class J{convertVectorFieldData(e){const t=l.A.fromJSON(e.pixelBlock),r=(0,u.FI)(t,e.type);return Promise.resolve(null!=r?r.toJSON():null)}computeStatisticsHistograms(e){const t=l.A.fromJSON(e.pixelBlock),r=(0,m.eH)(t);return Promise.resolve(r)}async decode(e){const t=await(0,a.D)(e.data,e.options);return t&&t.toJSON()}symbolize(e){e.pixelBlock=l.A.fromJSON(e.pixelBlock),e.extent=e.extent?s.A.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(e){this.symbolizer=O.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,c.vt)(e.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:s.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?l.A.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?i.A.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=t?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(l.A.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(e){const t=(0,m.f4)(l.A.fromJSON(e.srcPixelBlock));return Promise.resolve(t)}split(e){const t=(0,f.lD)(l.A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear);return t&&t.forEach(((e,r)=>{t.set(r,e?.toJSON())})),Promise.resolve(t)}clipTile(e){const t=l.A.fromJSON(e.pixelBlock),r=(0,f.J$)({...e,pixelBlock:t});return Promise.resolve(r?.toJSON())}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map((e=>e?new l.A(e):null)),r=(0,f.z7)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let o,s=r;return e.coefs&&(s=(0,f.$i)(r,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(o=(0,f.QF)(e.destDimension,e.gcsGrid),s=(0,u.Y2)(s,e.isUV?"vector-uv":"vector-magdir",o)),{pixelBlock:s?.toJSON(),localNorthDirections:o}}async createFlowMesh(e,t){const r={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:o,indexData:s}=await(0,_.CW)(e.meshType,e.simulationSettings,r,t.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:s.buffer},transferList:[o.buffer,s.buffer]}}async getProjectionOffsetGrid(e){const t=s.A.fromJSON(e.projectedExtent),r=s.A.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new n.A({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,p.xh)(t.spatialReference,r.spatialReference,o))&&await(0,p.Hh)();const i=e.rasterTransform?g(e.rasterTransform):null;return(0,p.l0)({...e,projectedExtent:t,srcBufferExtent:r,datumTransformation:o,rasterTransform:i})}}},6259:(e,t,r)=>{r.d(t,{A:()=>u});var o,s=r(35143),i=r(69539),n=r(53084),l=r(46053),a=r(40565),f=r(6409),c=r(85842),p=r(56280);let m=o=class extends p.A{constructor(e){super(e),this.algorithm=null,this.fromColor=null,this.toColor=null,this.type="algorithmic"}clone(){return new o({fromColor:(0,n.o8)(this.fromColor),toColor:(0,n.o8)(this.toColor),algorithm:this.algorithm})}};(0,s._)([(0,f.e)({esriCIELabAlgorithm:"cie-lab",esriHSVAlgorithm:"hsv",esriLabLChAlgorithm:"lab-lch"})],m.prototype,"algorithm",void 0),(0,s._)([(0,l.MZ)({type:i.A,json:{type:[a.jz],write:!0}})],m.prototype,"fromColor",void 0),(0,s._)([(0,l.MZ)({type:i.A,json:{type:[a.jz],write:!0}})],m.prototype,"toColor",void 0),(0,s._)([(0,l.MZ)({type:["algorithmic"]})],m.prototype,"type",void 0),m=o=(0,s._)([(0,c.$)("esri.rest.support.AlgorithmicColorRamp")],m);const u=m},22471:(e,t,r)=>{r.d(t,{g:()=>n,r:()=>l});var o=r(6259),s=r(56280),i=r(63068);const n={key:"type",base:s.A,typeMap:{algorithmic:o.A,multipart:i.A}};function l(e){return e?.type?"algorithmic"===e.type?o.A.fromJSON(e):"multipart"===e.type?i.A.fromJSON(e):null:null}},26855:(e,t,r)=>{r.d(t,{A:()=>c});var o,s=r(35143),i=r(46053),n=(r(81806),r(76460),r(47249),r(6409)),l=r(85842),a=r(75116);let f=o=class extends a.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new o({tolerance:this.tolerance})}};(0,s._)([(0,n.e)({GCSShiftXform:"gcs-shift"})],f.prototype,"type",void 0),(0,s._)([(0,i.MZ)()],f.prototype,"tolerance",void 0),f=o=(0,s._)([(0,l.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],f);const c=f},29754:(e,t,r)=>{r.d(t,{A:()=>d});var o,s=r(35143),i=r(46053),n=(r(81806),r(76460),r(47249),r(6409)),l=r(28379),a=r(85842),f=r(17707),c=r(76797),p=r(19247),m=r(75116);function u(e,t,r){const{x:o,y:s}=t;if(r<2)return{x:e[0]+o*e[2]+s*e[4],y:e[1]+o*e[3]+s*e[5]};if(2===r){const t=o*o,r=s*s,i=o*s;return{x:e[0]+o*e[2]+s*e[4]+t*e[6]+i*e[8]+r*e[10],y:e[1]+o*e[3]+s*e[5]+t*e[7]+i*e[9]+r*e[11]}}const i=o*o,n=s*s,l=o*s,a=i*o,f=i*s,c=o*n,p=s*n;return{x:e[0]+o*e[2]+s*e[4]+i*e[6]+l*e[8]+n*e[10]+a*e[12]+f*e[14]+c*e[16]+p*e[18],y:e[1]+o*e[3]+s*e[5]+i*e[7]+l*e[9]+n*e[11]+a*e[13]+f*e[15]+c*e[17]+p*e[19]}}function y(e,t,r){const{xmin:o,ymin:s,xmax:i,ymax:n,spatialReference:l}=t;let a=[];if(r<2)a.push({x:o,y:n}),a.push({x:i,y:n}),a.push({x:o,y:s}),a.push({x:i,y:s});else{let e=10;for(let t=0;t<e;t++)a.push({x:o,y:s+(n-s)*t/(e-1)}),a.push({x:i,y:s+(n-s)*t/(e-1)});e=8;for(let t=1;t<=e;t++)a.push({x:o+(i-o)*t/e,y:s}),a.push({x:o+(i-o)*t/e,y:n})}a=a.map((t=>u(e,t,r)));const f=a.map((e=>e.x)),p=a.map((e=>e.y));return new c.A({xmin:Math.min.apply(null,f),xmax:Math.max.apply(null,f),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:l})}let h=o=class extends m.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:r,coeffY:o}=t;if(!r?.length||!o?.length||r.length!==o.length)return null;const s=[];for(let i=0;i<r.length;i++)s.push(r[i]),s.push(o[i]);return s}writeForwardCoefficients(e,t,r){const o=[],s=[];for(let i=0;i<e?.length;i++)i%2==0?o.push(e[i]):s.push(e[i]);t.coeffX=o,t.coeffY=s}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,r,o,s,i,n]=e,l=o*n-i*s,a=i*s-o*n;return[(i*r-t*n)/l,(o*r-t*s)/a,n/l,s/a,-i/l,-o/a]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:r,inverseCoeffY:o}=t;if(!r?.length||!o?.length||r.length!==o.length)return null;const s=[];for(let i=0;i<r.length;i++)s.push(r[i]),s.push(o[i]);return s}writeInverseCoefficients(e,t,r){const o=[],s=[];for(let i=0;i<e?.length;i++)i%2==0?o.push(e[i]):s.push(e[i]);t.inverseCoeffX=o,t.inverseCoeffY=s}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=u(this.forwardCoefficients,e,this.polynomialOrder);return new p.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return y(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=u(this.inverseCoefficients,e,this.polynomialOrder);return new p.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return y(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new o({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,s._)([(0,i.MZ)({json:{write:!0}})],h.prototype,"polynomialOrder",void 0),(0,s._)([(0,i.MZ)()],h.prototype,"forwardCoefficients",void 0),(0,s._)([(0,l.w)("forwardCoefficients",["coeffX","coeffY"])],h.prototype,"readForwardCoefficients",null),(0,s._)([(0,f.K)("forwardCoefficients")],h.prototype,"writeForwardCoefficients",null),(0,s._)([(0,i.MZ)({json:{write:!0}})],h.prototype,"inverseCoefficients",null),(0,s._)([(0,l.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],h.prototype,"readInverseCoefficients",null),(0,s._)([(0,f.K)("inverseCoefficients")],h.prototype,"writeInverseCoefficients",null),(0,s._)([(0,i.MZ)()],h.prototype,"affectsPixelSize",null),(0,s._)([(0,n.e)({PolynomialXform:"polynomial"})],h.prototype,"type",void 0),h=o=(0,s._)([(0,a.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],h);const d=h},56280:(e,t,r)=>{r.d(t,{A:()=>a});var o=r(35143),s=r(42553),i=r(46053),n=(r(81806),r(76460),r(47249),r(85842));let l=class extends s.A{constructor(e){super(e),this.type=null}};(0,o._)([(0,i.MZ)({readOnly:!0,json:{read:!1,write:!0}})],l.prototype,"type",void 0),l=(0,o._)([(0,n.$)("esri.rest.support.ColorRamp")],l);const a=l},63068:(e,t,r)=>{r.d(t,{A:()=>p});var o,s=r(35143),i=r(53084),n=r(46053),l=(r(81806),r(76460),r(85842)),a=r(6259),f=r(56280);let c=o=class extends f.A{constructor(e){super(e),this.colorRamps=null,this.type="multipart"}clone(){return new o({colorRamps:(0,i.o8)(this.colorRamps)})}};(0,s._)([(0,n.MZ)({type:[a.A],json:{write:!0}})],c.prototype,"colorRamps",void 0),(0,s._)([(0,n.MZ)({type:["multipart"]})],c.prototype,"type",void 0),c=o=(0,s._)([(0,l.$)("esri.rest.support.MultipartColorRamp")],c);const p=c},75116:(e,t,r)=>{r.d(t,{A:()=>a});var o=r(35143),s=r(42553),i=r(46053),n=(r(81806),r(76460),r(47249),r(85842));let l=class extends s.A{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,o._)([(0,i.MZ)()],l.prototype,"affectsPixelSize",null),(0,o._)([(0,i.MZ)({json:{write:!0}})],l.prototype,"spatialReference",void 0),l=(0,o._)([(0,n.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],l);const a=l}}]);
//# sourceMappingURL=78764.3dba9f6d.chunk.js.map