"use strict";(self.webpackChunkfeedback_map=self.webpackChunkfeedback_map||[]).push([[52413],{2086:(t,e,r)=>{function i(t){const{options:e,value:r}=t;return"number"==typeof e[r]}function n(t){let e="";for(const r in t){const n=t[r];if("boolean"==typeof n)n&&(e+=`#define ${r}\n`);else if("number"==typeof n)e+=`#define ${r} ${n.toFixed()}\n`;else if("object"==typeof n)if(i(n)){const{value:t,options:i,namespace:s}=n,h=s?`${s}_`:"";for(const r in i)e+=`#define ${h}${r} ${i[r].toFixed()}\n`;e+=`#define ${r} ${h}${t}\n`}else{const t=n.options;let i=0;for(const r in t)e+=`#define ${t[r]} ${(i++).toFixed()}\n`;e+=`#define ${r} ${t[n.value]}\n`}}return e}r.d(e,{I:()=>n})},12331:(t,e,r)=>{r.d(e,{H:()=>l});r(81806);var i=r(76460),n=r(30726),s=r(76718),h=r(61678),o=r(93345),c=r(89179),a=r(62881),u=r(80895);class l{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(o.vt.FramebufferObject,this);const i=f(e)?e:new u.g(this._context,e);if(this._colorAttachments.set(o.Nm.COLOR_ATTACHMENT0,i),this._validateTextureDescriptor(i.descriptor),this._validateColorAttachmentPoint(o.Nm.COLOR_ATTACHMENT0),null!=r)if(function(t){return f(t)||null!=t&&"pixelFormat"in t}(r))this._depthStencilTexture=f(r)?r:new u.g(this._context,r),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=function(t){return null!=t&&"type"in t&&t.type===c.p.RenderBuffer}(r)?r:new a.l(this._context,r);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const t=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>this.detachColorTexture(e)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(o.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(o.Nm.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const t=this._colorAttachments.get(o.Nm.COLOR_ATTACHMENT0);return t?.descriptor?.width??0}get height(){const t=this._colorAttachments.get(o.Nm.COLOR_ATTACHMENT0);return t?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((t,e)=>{let[r,i]=e;return t+i.usedMemory}),this.depthStencil?.usedMemory??0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&f(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nm.COLOR_ATTACHMENT0;if(!t)return;this._validateColorAttachmentPoint(e);const r=t.descriptor;this._validateTextureDescriptor(r),this.detachColorTexture(e)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t)}detachColorTexture(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o.Nm.COLOR_ATTACHMENT0;const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nm.COLOR_ATTACHMENT0;const r=this._colorAttachments.get(e);r&&this._framebufferTexture2D(r.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case c.p.Texture:return this._attachDepthStencilTexture(t);case c.p.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){if(null==t)return;const e=t.descriptor;e.pixelFormat!==o.Ab.DEPTH_STENCIL&&e.pixelFormat!==o.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==o.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._validateTextureDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,o.nI)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;if(t&&this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,o.nI),this._context.bindFramebuffer(t)}return this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(e);r.framebufferRenderbuffer(o.R.FRAMEBUFFER,i,r.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(t.descriptor);r.framebufferRenderbuffer(o.R.FRAMEBUFFER,i,r.RENDERBUFFER,null),this._context.bindFramebuffer(e)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,r,i,n,s,h){(t<0||e<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const c=h.descriptor;h.descriptor.target!==o.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==c?.width||null==c?.height||t+r>this.width||e+i>this.height||n+r>c.width||s+i>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const a=this._context,l=a.bindTexture(h,u.g.TEXTURE_UNIT_FOR_UPDATES);a.setActiveTexture(u.g.TEXTURE_UNIT_FOR_UPDATES),a.bindFramebuffer(this),a.gl.copyTexSubImage2D(o.Ap.TEXTURE_2D,0,n,s,t,e,r,i),a.bindTexture(l,u.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,r,i,n,s,h){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),h||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,r,i,n,s,h)}async readPixelsAsync(t,e,r,i,n,h,c){const{gl:a}=this._context,u=s.g.createPixelPack(this._context,o._U.STREAM_READ,c.byteLength);this._context.bindBuffer(u);const l=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),a.readPixels(t,e,r,i,n,h,0),this._context.unbindBuffer(o.NZ.PIXEL_PACK_BUFFER),this._context.bindFramebuffer(l),await u.getSubDataAsync(c),u.dispose()}resize(t,e){if(this.width===t&&this.height===e)return;const r={width:t,height:e};_(r,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(r.width,r.height))),this._depthStencilTexture?.resize(r.width,r.height),this._initialized&&(_(r,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(r.width,r.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o.R.FRAMEBUFFER;const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const r=e.createFramebuffer();if(e.bindFramebuffer(t,r),this._colorAttachments.forEach(((e,r)=>this._framebufferTexture2D(e.glName,r,d(e),t))),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,r,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,d(this._depthStencilTexture),t);(0,h.en)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=r,this._initialized=!0}_framebufferTexture2D(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nm.COLOR_ATTACHMENT0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.Ap.TEXTURE_2D,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:o.R.FRAMEBUFFER,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this._context.gl.framebufferTexture2D(i,e,r,t,n)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(o.R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,n.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,n.WD)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==o.Ap.TEXTURE_2D&&t.target!==o.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),_(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){_(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case o.yQ.DEPTH_COMPONENT16:case o.yQ.DEPTH_COMPONENT24:case o.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case o.yQ.DEPTH24_STENCIL8:case o.yQ.DEPTH32F_STENCIL8:case o.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case o.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===l._MAX_COLOR_ATTACHMENTS){const{gl:t}=this._context;l._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}const e=t-o.Nm.COLOR_ATTACHMENT0;e+1>l._MAX_COLOR_ATTACHMENTS&&i.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${l._MAX_COLOR_ATTACHMENTS} color attachments`)}}function f(t){return null!=t&&"type"in t&&t.type===c.p.Texture}function _(t,e){const r=Math.max(t.width,t.height);if(r>e){i.A.getLogger("esri.views.webgl.FramebufferObject").warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);const n=e/r;return t.width=Math.round(t.width*n),t.height=Math.round(t.height*n),!1}return!0}function d(t){return t.descriptor.target===o.Ap.TEXTURE_CUBE_MAP?o.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:o.Ap.TEXTURE_2D}l._MAX_COLOR_ATTACHMENTS=-1},22475:(t,e,r)=>{r.r(e),r.d(e,{BufferObject:()=>i.g,FramebufferObject:()=>n.H,Program:()=>s.B,ProgramCache:()=>h.J,Renderbuffer:()=>o.l,ShaderCompiler:()=>c.Z,Texture:()=>a.g,VertexArrayObject:()=>u.Z,createProgram:()=>f.r,glslifyDefineMap:()=>l.I});var i=r(76718),n=r(12331),s=r(44488),h=r(46082),o=r(62881),c=r(78403),a=r(80895),u=r(36911),l=r(2086),f=r(26373)},46082:(t,e,r)=>{r.d(e,{J:()=>s});r(81806);var i=r(75941),n=r(44488);class s{constructor(t){this._rctx=t,this._store=new i.O}dispose(){this._store.forAll((t=>t.dispose())),this._store.clear()}acquire(t,e,r,i){const s=this._store.get(t,e);if(null!=s)return s.ref(),s;const h=new n.B(this._rctx,t,e,r,i);return h.ref(),this._store.set(t,e,h),h}get test(){}}},62881:(t,e,r)=>{r.d(e,{l:()=>h});var i=r(93345),n=r(89179),s=r(88800);class h{constructor(t,e){this._context=t,this._descriptor=e,this.type=n.p.RenderBuffer,this._context.instanceCounter.increment(i.vt.Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:h,internalFormat:o,multisampled:c}=e;c?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,o,s,h):r.renderbufferStorage(r.RENDERBUFFER,o,s,h),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return(0,s.e)(this._descriptor)}resize(t,e){const r=this._descriptor;if(r.width===t&&r.height===e)return;r.width=t,r.height=e;const i=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(i.vt.Renderbuffer,this),this._context=null)}}},75941:(t,e,r)=>{r.d(e,{O:()=>i});class i{constructor(){this._outer=new Map}clear(){this._outer.clear()}get empty(){return 0===this._outer.size}get(t,e){return this._outer.get(t)?.get(e)}getInner(t){return this._outer.get(t)}set(t,e,r){const i=this._outer.get(t);i?i.set(e,r):this._outer.set(t,new Map([[e,r]]))}delete(t,e){const r=this._outer.get(t);r&&(r.delete(e),0===r.size&&this._outer.delete(t))}forEach(t){this._outer.forEach(((e,r)=>t(e,r)))}forAll(t){for(const e of this._outer.values())for(const r of e.values())t(r)}}},88800:(t,e,r)=>{r.d(e,{e:()=>s,q:()=>n});var i=r(27207);class n{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.internalFormat=t,this.width=e,this.height=r,this.multisampled=!1,this.samples=1}}function s(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,i.IB)(t.internalFormat)}},97255:(t,e,r)=>{r.d(e,{Qf:()=>c,Qh:()=>h,RS:()=>n,ez:()=>l,i5:()=>f,lM:()=>s,qK:()=>u});var i=r(78393);const n=16;function s(t){if(!t)return 0;let e=u;for(const r in t)t.hasOwnProperty(r)&&(e+=o(t[r],!1));return e}function h(t){if(!t)return 0;if("number"==typeof t[0])return c(t);if(Array.isArray(t))return function(t){const e=t.length;if(0===e||"number"==typeof t[0])return a(t,8);let r=l;for(let i=0;i<e;i++)r+=o(t[i]);return r}(t);let e=u;for(const r in t)t.hasOwnProperty(r)&&(e+=o(t[r]));return e}function o(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];switch(typeof t){case"object":return e?h(t):u;case"string":return function(t){return 32+t.length}(t);case"number":return n;case"boolean":return 4;default:return 8}}function c(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return e.reduce(((t,e)=>t+(e?(0,i.iu)(e)?e.byteLength+f:Array.isArray(e)?a(e,n):0:0)),0)}function a(t,e){return l+t.length*e}const u=32,l=16,f=145}}]);
//# sourceMappingURL=52413.f894b779.chunk.js.map