"use strict";(self.webpackChunkfeedback_map=self.webpackChunkfeedback_map||[]).push([[7079],{11270:(e,t,a)=>{a.d(t,{q:()=>M});var i=a(35143),n=a(50076),r=a(90534),o=a(46053),s=a(40565),l=(a(81806),a(47249),a(28379)),h=a(85842),d=a(17707),y=a(80979),c=a(6527),p=a(29584);const u={ArcGISAnnotationLayer:!0,ArcGISDimensionLayer:!0,ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISStreamLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BingMapsAerial:!0,BingMapsHybrid:!0,BingMapsRoad:!0,CatalogLayer:!0,CSV:!0,GeoJSON:!0,GeoRSS:!0,GroupLayer:!0,KML:!0,KnowledgeGraphLayer:!0,MediaLayer:!0,OGCFeatureLayer:!0,OrientedImageryLayer:!0,SubtypeGroupLayer:!0,VectorTileLayer:!0,WCS:!0,WFS:!0,WMS:!0,WebTiledLayer:!0},g={ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BingMapsAerial:!0,BingMapsHybrid:!0,BingMapsRoad:!0,OpenStreetMap:!0,VectorTileLayer:!0,WCS:!0,WMS:!0,WebTiledLayer:!0},m={ArcGISFeatureLayer:!0,SubtypeGroupTable:!0},f={"web-scene/operational-layers":{ArcGISDimensionLayer:!0,ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISTiledElevationServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BuildingSceneLayer:!0,CatalogLayer:!0,CSV:!0,GeoJSON:!0,GroupLayer:!0,IntegratedMesh3DTilesLayer:!0,Object3DTilesLayer:!0,IntegratedMeshLayer:!0,KML:!0,LineOfSightLayer:!0,MediaLayer:!0,OGCFeatureLayer:!0,OrientedImageryLayer:!0,PointCloudLayer:!0,RasterDataLayer:!0,VectorTileLayer:!0,ViewshedLayer:!0,Voxel:!0,WCS:!0,WFS:!0,WMS:!0,WebTiledLayer:!0},"web-scene/basemap":{ArcGISImageServiceLayer:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,WCS:!0,WMS:!0,WebTiledLayer:!0},"web-scene/ground":{ArcGISTiledElevationServiceLayer:!0,RasterDataElevationLayer:!0},"web-scene/tables":{ArcGISFeatureLayer:!0},"web-map/operational-layers":u,"web-map/basemap":g,"web-map/tables":m,"link-chart/operational-layers":{...u,LinkChartLayer:!0},"link-chart/basemap":g,"link-chart/tables":m,"portal-item/operational-layers":{ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISStreamLayer:!0,ArcGISTiledImageServiceLayer:!0,BuildingSceneLayer:!0,IntegratedMesh3DTilesLayer:!0,IntegratedMeshLayer:!0,MediaLayer:!0,OrientedImageryLayer:!0,PointCloudLayer:!0,SubtypeGroupLayer:!0,WCS:!0},"portal-item/tables":{ArcGISFeatureLayer:!0,SubtypeGroupTable:!0}};var L=a(95363),b=a(59187);const M=e=>{let t=class extends e{constructor(){super(...arguments),this.persistenceEnabled=!0,this.title=null}readId(e,t,a){return"Group Layer"===a?.portalItem?.type?void 0:e}writeListMode(e,t,a,i){(i&&"ground"===i.layerContainerType||e&&(0,p.R)(this,a,{},i))&&(t[a]=e)}writeOperationalLayerType(e,t,a){e&&(t[a]=e)}writeTitle(e,t){t.title=e??"Layer"}readVisibilityTimeExtent(e){return e?b.A.fromArray(e):null}writeVisibilityTimeExtent(e,t,a,i){e&&"tables"!==i.layerContainerType&&(e.isEmpty?i?.messages&&i.messages.push(new n.A("layer:invalid-visibilityTimeExtent","visibilityTimeExtent cannot be empty")):t[a]=e.toArray())}read(e,t){t&&(t.layer=this),(0,c.t)(this,e,(t=>super.read(e,t)),t)}write(e,t){if(!this.persistenceEnabled&&!t?.ignorePersistenceEnabled)return null;if(t?.origin){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`,a=f[e];let i=!!a?.[this.operationalLayerType];if("ArcGISTiledElevationServiceLayer"===this.operationalLayerType&&"web-scene/operational-layers"===e&&(i=!1),"ArcGISDimensionLayer"===this.operationalLayerType&&"web-map/operational-layers"===e&&(i=!1),!i)return t.messages?.push(new n.A("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this})),null}const a=super.write(e,{...t,layer:this}),i=!!t&&!!t.messages&&!!t.messages.filter((e=>e instanceof n.A&&"web-document-write:property-required"===e.name)).length;return(0,r.w8)(a?.url)?(t?.messages?.push(new n.A("layer:invalid-url",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Blob URL cannot be written to web scenes and web maps`,{layer:this})),null):!this.url&&i?null:a}beforeSave(){}};return(0,i._)([(0,o.MZ)({type:String,json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0}},"portal-item":{write:!1}}}})],t.prototype,"id",void 0),(0,i._)([(0,l.w)("id",["id"])],t.prototype,"readId",null),(0,i._)([(0,o.MZ)(L.C1)],t.prototype,"listMode",void 0),(0,i._)([(0,d.K)("listMode")],t.prototype,"writeListMode",null),(0,i._)([(0,o.MZ)({type:String,readOnly:!0,json:{read:!1,write:{target:"layerType",ignoreOrigin:!0},origins:{"portal-item":{write:!1},"web-scene":{name:"layerType",read:!1,write:{enabled:!0,ignoreOrigin:!0,layerContainerTypes:y.K,isRequired:!0}}}}})],t.prototype,"operationalLayerType",void 0),(0,i._)([(0,d.K)("operationalLayerType")],t.prototype,"writeOperationalLayerType",null),(0,i._)([(0,o.MZ)(L.ke)],t.prototype,"opacity",void 0),(0,i._)([(0,o.MZ)({type:Boolean,readOnly:!1})],t.prototype,"persistenceEnabled",void 0),(0,i._)([(0,o.MZ)({type:String,json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}},"portal-item":{write:!1}}},value:"Layer"})],t.prototype,"title",void 0),(0,i._)([(0,d.K)("title"),(0,d.K)(["web-scene"],"title")],t.prototype,"writeTitle",null),(0,i._)([(0,o.MZ)({type:b.A,json:{origins:{"web-scene":{write:{layerContainerTypes:y.K}}}}})],t.prototype,"visibilityTimeExtent",void 0),(0,i._)([(0,l.w)("visibilityTimeExtent")],t.prototype,"readVisibilityTimeExtent",null),(0,i._)([(0,d.K)(["portal-item","web-map","web-scene"],"visibilityTimeExtent",{visibilityTimeExtent:{type:[[s.jz,s.Uv]]}})],t.prototype,"writeVisibilityTimeExtent",null),(0,i._)([(0,o.MZ)({type:Boolean,json:{name:"visibility",write:{layerContainerTypes:y.K}}})],t.prototype,"visible",void 0),t=(0,i._)([(0,h.$)("esri.layers.mixins.OperationalLayer")],t),t}},17079:(e,t,a)=>{a.r(t),a.d(t,{default:()=>R});var i,n,r=a(35143),o=a(55),s=a(94643),l=a(50076),h=a(76460),d=a(87663),y=a(77717),c=a(50346),p=a(68134),u=a(46053),g=(a(81806),a(47249),a(85842)),m=a(49140),f=a(76797),L=a(19247),b=a(23701),M=a(25515),w=a(98618),T=a(21009);(n=i||(i={})).MULTIPLIER="multiplier",n.ABSOLUTE="absolute-value";var C=a(12718),k=a(83716),v=a(2948),S=a(33750),I=a(8893),A=a(65624),N=a(11270),x=a(5682),E=a(95363),D=a(85646),_=a(47703);let G=class extends((0,N.q)((0,A.dM)((0,x.j)((0,y.P)(M.A))))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(s.A.ofType(k.A)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new f.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(s.A.ofType(k.A)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.initializationInclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.initializationInclusionModeDefinition)throw new l.A("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles((0,p.wB)((()=>this.layers.concat(this.tables)),((e,t)=>this._handleSublayersChange(e,t)),p.OH))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}=e;return{url:t,title:a,dataPreloadedInLocalCache:i,initializationLinkChartConfig:n}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new l.A("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((n,r)=>{const o=this._graphTypeLookup.get(r);if(!o)return h.A.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(r);"relationship"===o.type?t.has(r)||(t.add(r),i.push(o)):"entity"===o.type?t.has(r)||(t.add(r),a.push(o)):(h.A.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(r))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new C.P({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=n}load(e){const t=async()=>{const e=[],t=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await(0,v.qN)(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach((a=>{t.push(a.refreshCachedQueryEngine()),e.push(new Promise((e=>{a.on("layerview-create",(()=>{e(null)}))})))})),this.tables.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t)};return this.addResolvingPromise(new Promise((a=>{(0,_.fetchKnowledgeGraph)(this.url).then((async i=>{i.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),i.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)}));const n=this.linkChart?.linkChartProperties;if(n?.originIdOf("entitiesUrl")===m.Gr.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await o.XW.fetchAndConvertSerializedLinkChart({entitiesUrl:n?.entitiesUrl,relationshipsUrl:n?.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(i.dataModel),this.initializationLinkChartConfig={layoutSettings:n?.layoutSettings??void 0,layoutMode:(0,I.k5)(n.layoutType)}),this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache){const e=S.A.getInstance();for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const i of a.members?.values()??[]){const a=e.readFromStoreById(`${t}__${i.id}`);a&&(0,d.tE)(this.dataManager.sublayerCaches,t,(()=>new Map)).set(i.id,a)}await t()}else{const a="geographic-organic-standard"===this.initializationLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,a,!0).then((async()=>{(0,c.Te)(e),await t()})))}a(null)}))}))),Promise.resolve(this)}set initializationInclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("initializationInclusionModeDefinition",e):h.A.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await(0,I.aq)(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));i.length>0&&(this.membershipModified=!0),await this._handleNewRecords(i,t)}async removeRecords(e){let{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1,overrideMembershipCheck:i=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1},n=[];for(const o of e)(i||!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(o.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(o.typeName)?.members?.has(o.id))&&n.push(o);if(t){const e=new Set,t=[];for(const a of n)if(this.dataManager.nodeConnectionsLookup.has(a.id))for(const t of this.dataManager.nodeConnectionsLookup.get(a.id))e.add(t);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});n=n.concat(t)}this.dataManager.removeFromLayer(n);for(const o of n)this.sublayerIdsCache.get(o.typeName)?.delete(o.id),this.dataManager.relationshipTypeNames.has(o.typeName)?this.relationshipLinkChartDiagramLookup.delete(o.id):this.entityLinkChartDiagramLookup.delete(o.id);a&&await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings}),n.length>0&&(this.membershipModified=!0);const r=[];return this.layers.forEach((e=>{r.push(e.refreshCachedQueryEngine())})),await Promise.all(r),this._refreshNamedTypes(),n}async expand(e,t){let a=[];try{const i=await this.dataManager.getConnectedRecordIds(e,t?.relationshipTypeNames,t);a=i.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id))),await this._handleNewRecords(i,t),i.length>0&&(this.membershipModified=!0),(0,c.Te)(t?.signal)}catch(i){throw(0,c.zf)(i)&&a.length>0&&this.removeRecords(a,{overrideMembershipCheck:!0}),i}return{records:a}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.originIdOf("layers")===m.Gr.DEFAULTS?this._createSublayers(e,this.layers,(e=>!!e.geometryType)):this._updateSublayers(e,this.layers),this.originIdOf("tables")===m.Gr.DEFAULTS?this._createSublayers(e,this.tables,(e=>!e.geometryType)):this._updateSublayers(e,this.tables),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{const a=(0,d.tE)(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{let{id:i,linkChartLocation:n}=e;if(a.add(i),n){const e="coords"in n&&"lengths"in n?n:(0,w.Ux)(n);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(i,e):this.entityLinkChartDiagramLookup.set(i,e)}}))}))}async calculateLinkChartLayout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"organic-standard",t=arguments.length>1?arguments[1]:void 0;const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{i.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const r=new Map,o=new Map,s=new Map,y=new Map,p=new Uint8Array(a.length),u=new Float64Array(a.length),g=new Float64Array(a.length),m=new Float64Array(a.length),M=new Float64Array(a.length),C=new Uint32Array(i.length),k=new Uint32Array(i.length),v=new Float64Array(i.length),S=new Float64Array(i.length),I=[],A=new f.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let N,x="organic-standard",E=0,_=0;const G=D.i6.apply;switch(x="geographic-organic-standard"===e?"organic-standard":e,x){case"organic-standard":N=D.pM.apply;break;case"organic-community":N=D.Tu.apply;break;case"hierarchical-bottom-to-top":N=D.$C.apply;break;case"radial-root-centric":N=D.vJ.apply;break;case"tree-left-to-right":N=D.Xq.apply;break;default:N=D.Wg.apply}let R=!1;a.forEach((a=>{let{typeName:i,feature:n}=a;if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e&&t?.lockedNodeLocations?.has(n.attributes[T.dr])){"geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(i)?p[E]=D.tx.IsGeographic:p[E]=D.tx.None;const a=t.lockedNodeLocations.get(n.attributes[T.dr]);u[E]=a.x,g[E]=a.y}else if("geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(i)){p[E]=D.tx.IsGeographic;let e=null;const t=n.attributes[this.dataManager.geographicLookup.get(i).name],a=this.dataManager.geographicLookup.get(i)?.geometryType;switch(a){case"esriGeometryPoint":u[E]=t?.x,g[E]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(u[E]=e.x,g[E]=e.y):p[E]=D.tx.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(u[E]=e.x,g[E]=e.y):p[E]=D.tx.IsMovable;break;default:p[E]=D.tx.IsMovable}(null==u[E]||null==g[E]||Number.isNaN(u[E])||Number.isNaN(g[E]))&&(p[E]=D.tx.IsMovable,u[E]=0,g[E]=0)}else if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){!R&&t?.lockedNodeLocations?.has(n.attributes[T.dr])&&(R=!0);const e=t?.timeInfoByTypeName?.get(i),a=e?.startField,r=a&&e?.startField?n.attributes[a]:null;m[E]=r?new Date(r).getTime():NaN;const o=e?.endField,s=o&&e?.endField?n.attributes[o]:null;M[E]=s?new Date(s).getTime():NaN,u[E]=0,g[E]=0,p[E]=D.tx.IsMovable}else p[E]=D.tx.IsMovable,u[E]=0,g[E]=0;y.set(n.attributes[T.dr],E),I[E]={feature:n,typeName:i},E++})),R&&h.A.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let O=!1;const z=new Map;i.forEach((a=>{const i=a.feature.attributes[T.Cz],r=a.feature.attributes[T.KQ],o=y.get(i),s=y.get(r),l=t?.timeInfoByTypeName?.get(a.typeName),h=t?.timeInfoByTypeName?l?.startField:null,d=h?a.feature.attributes[h]:null,c=l?.endField,p=c?a.feature.attributes[c]:null;if(void 0!==o&&void 0!==s){let t=i+"-"+r;"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(t=t+"-"+d+"-"+p);const l=z.get(t),h=l?.has(a.typeName);h||(C[_]=o,k[_]=s,"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(v[_]=d?new Date(d).getTime():NaN,S[_]=p?new Date(p).getTime():NaN),void 0===l?z.set(t,new Map([[a.typeName,_]])):l.set(a.typeName,_),_++),n.push(a)}else O=!0,this.relationshipLinkChartDiagramLookup.set(i,null)})),O&&h.A.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const F=this._validateOrganicLayoutSettings(e,t?.layoutSettings?.organicLayoutSettings),B=this._convertValidatedOrganicSettingsToCalculationSettings(F);await(0,D.Hh)();let P=D.JT.Error,Z=null;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){let a;({status:P,links:Z,graphics:a}=G((()=>t?.signal?.aborted??!1),p,u,g,m,M,C.subarray(0,_),k.subarray(0,_),v.subarray(0,_),S.subarray(0,_),"chronological-multi-timeline"===e,t?.layoutSettings?.chronologicalLayoutSettings)),P===D.JT.Success&&(this.chronologicalAuxiliaryGraphics=a)}else({status:P,links:Z}=N((()=>t?.signal?.aborted??!1),p,u,g,C.subarray(0,_),k.subarray(0,_),B.computationBudgetTime,B.idealEdgeLengthMultiplier,B.repulsionRadiusMultiplier));if((0,c.Te)(t?.signal),P===D.JT.Error)throw new l.A("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(P===D.JT.Canceled)throw(0,c.NK)();for(let l=0;l<I.length;l++){if(g[l]>84.9999?g[l]=84.9999:g[l]<-84.9999&&(g[l]=-84.9999),u[l]>179.9999?u[l]=179.9999:u[l]<-179.9999&&(u[l]=-179.9999),I[l].feature.attributes[T.T1]=new L.A(u[l],g[l]),r.has(I[l].typeName)){const e=r.get(I[l].typeName);e?.set(I[l].feature.attributes[T.dr],I[l].feature)}else{const e=new Map;e.set(I[l].feature.attributes[T.dr],I[l].feature),r.set(I[l].typeName,e)}s.set(I[l].feature.attributes[T.dr],I[l].feature);const e=(0,w.Ux)(I[l].feature.attributes[T.T1]);this.entityLinkChartDiagramLookup.set(I[l].feature.attributes[T.dr],I[l].feature.attributes[T.T1]?e:null);const t=(0,d.tE)(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,I[l].typeName,(()=>({useAllData:!1,members:new Map})));(0,d.tE)(t.members,I[l].feature.attributes[T.dr],(()=>({id:I[l].feature.attributes[T.dr],linkChartLocation:void 0}))).linkChartLocation=I[l].feature.attributes[T.T1],I[l].feature.attributes[T.T1].x<A.xmin&&(A.xmin=I[l].feature.attributes[T.T1].x),I[l].feature.attributes[T.T1].x>A.xmax&&(A.xmax=I[l].feature.attributes[T.T1].x),I[l].feature.attributes[T.T1].y<A.ymin&&(A.ymin=I[l].feature.attributes[T.T1].y),I[l].feature.attributes[T.T1].y>A.ymax&&(A.ymax=I[l].feature.attributes[T.T1].y)}if(this.linkChartExtent.xmin=A.xmin,this.linkChartExtent.xmax=A.xmax,this.linkChartExtent.ymin=A.ymin,this.linkChartExtent.ymax=A.ymax,!Z)throw new l.A("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const U=new Map,W=new Map,K=new Map,$=new Set;for(let l=0;l<n.length;l++){const a=[],i=n[l],r=i.feature.attributes[T.Cz],c=i.feature.attributes[T.KQ];let p=r+"-"+c;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){const e=t?.timeInfoByTypeName?.get(i.typeName),a=t?.timeInfoByTypeName?e?.startField:null,n=a?i.feature.attributes[a]:null,r=e?.endField;p+="-"+n+"-"+(r?i.feature.attributes[r]:null)}const u=z.get(p).get(i.typeName),g=0===u?0:Z?.vertexEndIndex[u-1];if(!$.has(u)){if($.add(u),Z.types[u]===D.J.Recursive){const e=[Z.vertices[2*g],Z.vertices[2*g+1]],t=[Z.vertices[2*(g+1)],Z.vertices[2*(g+1)+1]],i=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],n=[i[0]-e[0],i[1]-e[1]],r=[i[0]+n[1],i[1]-n[0]],o=[i[0]-n[1],i[1]+n[0]];a.push(e),a.push(r),a.push(t),a.push(o),a.push(e)}else{if(Z.types[u]!==D.J.Regular){h.A.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=g;e<Z.vertexEndIndex[u];e++)a.push([Z.vertices[2*e],Z.vertices[2*e+1]])}if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e){const e=I[y.get(r)]?.feature.attributes[T.T1],t=I[y.get(c)]?.feature.attributes[T.T1];a[0][0]===e.x&&a[0][1]===e.y||(a[0]=[e.x,e.y]),a[a.length-1][0]===t.x&&a[a.length-1][1]===t.y||(a[a.length-1]=[t.x,t.y])}for(let e=1;e<a.length-1;e++)a[e][1]>85.5?a[e][1]=85.5:a[e][1]<-85.5&&(a[e][1]=-85.5),a[e][0]>179.9999?a[e][0]=179.9999:a[e][0]<-179.9999&&(a[e][0]=-179.9999);U.has(p)?U.get(p).push(a):U.set(p,[a])}const m=U.get(p);W.has(p)||(W.set(p,new Map),K.set(p,new Map));const f=W.get(p),L=K.get(p);f.has(i.typeName)||(f.set(i.typeName,m.shift()),L.set(i.typeName,0));const M=f.get(i.typeName);L.set(i.typeName,L.get(i.typeName)+1);const C=new b.A({paths:[M]});if(i.feature.attributes[T.T1]=C,o.has(i.typeName)){const e=o.get(i.typeName);e?.set(i.feature.attributes[T.dr],i.feature)}else{const e=new Map;e.set(i.feature.attributes[T.dr],i.feature),o.set(i.typeName,e)}s.set(i.feature.attributes[T.dr],i.feature);const k=(0,w.Ux)(i.feature.attributes[T.T1]);this.relationshipLinkChartDiagramLookup.set(i.feature.attributes[T.dr],i.feature.attributes[T.T1]?k:null);const v=(0,d.tE)(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,i.typeName,(()=>({useAllData:!1,members:new Map})));(0,d.tE)(v.members,i.feature.attributes[T.dr],(()=>({id:i.feature.attributes[T.dr],linkChartLocation:void 0}))).linkChartLocation=k}for(const l of n)l.feature.attributes[T.M1]=K.get(l.feature.attributes[T.Cz]+"-"+l.feature.attributes[T.KQ])?.get(l.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:t?.layoutSettings?.clone()},{nodes:r,links:o,idMap:s}}async applyNewLinkChartLayout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"organic-standard",t=arguments.length>1?arguments[1]:void 0;const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),this.membershipModified=!0,await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.entries()??[])this.dataManager.relationshipTypeNames.has(t)||a?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new L.A({x:i.x,y:i.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(i=i.concat(Array.from(t.keys())))}a=await this.dataManager.getRelationshipsBetweenNodes(e,i,t),await this._handleNewRecords(a,t),(0,c.Te)(t)}catch(i){throw(0,c.zf)(i)&&this.removeRecords(a),i}return{records:a}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let i=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(i=i.concat(Array.from(t.keys())))}let n=[];for(const e of this.dataManager.entityTypeNames){const t=this.sublayerIdsCache.get(e);t&&(n=n.concat(Array.from(t)))}a=await this.dataManager.getRelationshipsFromNodes(e,n,i,t),await this._handleNewRecords(a,t),a.length>0&&(this.membershipModified=!0),(0,c.Te)(t)}catch(i){throw(0,c.zf)(i)&&this.removeRecords(a),i}return{records:a}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"organic-standard",t=arguments.length>1?arguments[1]:void 0;const a=new Map;this.layers.forEach((e=>{a.set(e.objectType.name,e.timeInfo)})),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t}),this.linkChart?.handleChronologicalOverlay()}async _handleNewRecords(e,t){const a=[];this.dataManager.addToLayer(e);for(const n of e)this.sublayerIdsCache.has(n.typeName)||(this.sublayerIdsCache.set(n.typeName,new Set),a.push(n.typeName)),this.sublayerIdsCache.get(n.typeName).add(n.id);for(const n of a){const e=this._graphTypeLookup.get(n);if(e){const t=this._createSublayer(e);"entity"===e.type?this.dataManager.entityTypeNames.add(n):this.dataManager.relationshipTypeNames.add(n),t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.set(n,new Map)}}await(0,v.qN)(this,a,t),await this.dataManager.refreshCacheContent(e.map((e=>e.id)),void 0,void 0,void 0,t);const i={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[n,r]of this.entityLinkChartDiagramLookup.entries())r&&i.lockedNodeLocations.set(n,new L.A(r.coords[0],r.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,i)}_createSublayers(e,t,a){e.forEach((e=>{const i=this._createSublayer(e);a(i)&&t.push(i),this._updateSublayerCaches(e)}))}_updateSublayers(e,t){t.forEach((t=>{t.parentCompositeLayer=this;const a=e.find((e=>e.type===t.graphType&&e.name===t.graphTypeName));a&&(t.objectType=a,t.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))}))}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=m.Gr.PORTAL_ITEM&&e<m.Gr.USER}async _initializeDiagram(){this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const r=(0,w.Ux)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,r):this.entityLinkChartDiagramLookup.set(n,r),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[T.Cz]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[T.KQ]);if(t&&a){const i=(0,w.Ux)(new b.A({paths:[[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[T.dr],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[T.dr],null)}))}))):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const a=e=>"number"==typeof e&&!isNaN(e),n=e=>a(e)&&e>=0,r={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return r;const{computationBudgetTime:o,autoRepulsionRadius:s,repulsionRadiusMultiplier:l,absoluteIdealEdgeLength:d,multiplicativeIdealEdgeLength:y,idealEdgeLengthType:c}=t;return(e=>a(e)&&e>=1)(o)?r.computationBudgetTime=o:o&&h.A.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),r.autoRepulsionRadius=s,!s&&(e=>a(e)&&e>=1)(l)?r.repulsionRadiusMultiplier=l:s||(r.autoRepulsionRadius=!0,h.A.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),"geographic-organic-standard"===e&&((e=>Object.values(i).includes(e))(c)?r.idealEdgeLengthType=c:void 0!==c&&h.A.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),"absolute-value"===c&&n(d)?r.absoluteIdealEdgeLength=d:"absolute-value"===c&&void 0!==d?h.A.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):"multiplier"===c&&n(y)?r.multiplicativeIdealEdgeLength=y:"multiplier"===c&&void 0!==y&&h.A.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),r}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===i.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===i.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new k.A({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this})),this.addHandles([e.on("after-add",(e=>{let{item:t}=e;t.parent=this})),e.on("after-remove",(e=>{let{item:t}=e;t.parent=null}))],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){const t=new Set((e.entityTypes??[]).map((e=>e.name)).concat((e.relationshipTypes??[]).map((e=>e.name)))),a=new Set((e.entityTypes??[]).map((e=>e.name))),i=new Set((e.relationshipTypes??[]).map((e=>e.name)));if(this.layers){for(const i of this.layers)!i.graphType&&t.has(i.graphTypeName)&&(i.graphType=a.has(i.graphTypeName)?"entity":"relationship");const e=this.layers.filter((e=>t.has(e.graphTypeName)&&("entity"===e.graphType?a.has(e.graphTypeName):i.has(e.graphTypeName))));this.setAtOrigin("layers",e,(0,m.OL)(this.originIdOf("layers")))}else this.layers=new s.A;if(this.layers&&this._originalInclusionList){const e=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),t=this.tables?.map((e=>e.graphTypeName))??[],a=this.layers.map((e=>e.graphTypeName)).concat(t);for(const n of a)e.has(n)||this._originalInclusionList.namedTypeDefinitions.set(n,{useAllData:!1,members:new Map});const i=[];for(const n of this._originalInclusionList.namedTypeDefinitions.keys())a.includes(n)||(h.A.getLogger(this).warn(`A named type, ${n}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),i.push(n));for(const n of i)this._originalInclusionList.namedTypeDefinitions.delete(n)}}};(0,r._)([(0,u.MZ)(E.OZ)],G.prototype,"url",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"dataPreloadedInLocalCache",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"initializationLinkChartConfig",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"membershipModified",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"dataManager",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"initializationInclusionModeDefinition",null),(0,r._)([(0,u.MZ)()],G.prototype,"knowledgeGraph",void 0),(0,r._)([(0,u.MZ)({type:s.A.ofType(k.A),json:{write:{ignoreOrigin:!0}}})],G.prototype,"layers",void 0),(0,r._)([(0,u.MZ)({readOnly:!0})],G.prototype,"linkChart",null),(0,r._)([(0,u.MZ)()],G.prototype,"entityLinkChartDiagramLookup",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"linkChartExtent",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"memberEntityTypes",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"memberRelationshipTypes",void 0),(0,r._)([(0,u.MZ)({type:["LinkChartLayer"]})],G.prototype,"operationalLayerType",void 0),(0,r._)([(0,u.MZ)()],G.prototype,"sublayerIdsCache",void 0),(0,r._)([(0,u.MZ)({type:s.A.ofType(k.A),json:{write:{ignoreOrigin:!0}}})],G.prototype,"tables",void 0),(0,r._)([(0,u.MZ)({json:{read:!1}})],G.prototype,"type",void 0),(0,r._)([(0,u.MZ)({json:{read:!1}})],G.prototype,"chronologicalAuxiliaryGraphics",void 0),G=(0,r._)([(0,g.$)("esri.layers.LinkChartLayer")],G);const R=G}}]);
//# sourceMappingURL=7079.12c28574.chunk.js.map